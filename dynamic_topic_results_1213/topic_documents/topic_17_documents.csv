"year","title","abstract","journal","doi"
"2000","The Orbiten free software survey","Free software is supposedly developed by a loosely organised """"community"""" of programmers. However it has been quite unknown until now who, except for some well-known celebrities, belongs to this community, and more importantly how contributions are distributed. The authors present a first survey of free software authorship, with the emphasis not on building a census or even a """"hall of fame"""", but on identifying patterns of concentration and distribution of contribution. The sample code size is not necessarily representative and there are several errors due to the automated and vast nature of the task of identifying and crediting authors. Nevertheless, comprehensive data is collated for the first time, and can be scrutinised in detail on the survey Web site.","",""
"2000","When beggers become choosers","This paper explores the notion of leadership in open source software development projects. This paper departs from the discussion of leadership in Learner and Tiroles working paper """"The Simple Economics of Open Source"""". My paper argues that leaders in open source projects only have indirect means of influence on what co-developers should develop. It is shown that leaders are beggars for help and contributions from co-developers, when the project starts up. But leaders become choosers, if a project becomes successful and attracts the attention of productive co-developers. The paper discusses the source of power of the open source project leaders as well.","",""
"2000","Essence of distributed work: The case of the Linux kernel","This paper provides a historical account of how the Linux operating system kernel was developed from three different perspectives. Each focuses on different critical factors in its success at the individual, group, and community levels. The technical and management decisions of Linus Torvalds the individual were critical in laying the groundwork for a collaborative software development project that has lasted almost a decade. The contributions of volunteer programmers distributed worldwide enabled the development of an operating system on the par with proprietary operating systems. The Linux electronic community was the organizing structure that coordinated the efforts of the individual programmers. The paper concludes by summarizing the factors important in the successful distributed development of the Linux kernel, and the implications for organizationally managed distributed work arrangements.","",""
"2000","Free source as free thought: Architecting free standards","As we build cyberspace, it is up to us, as individuals, not to promote illiteracy and proprietary standards that shut out those who fail to purchase computer programs from a specific vendor. It has become fashionable to blame others, such as Microsoft, for creating what is known as the """"dark ages of computing"""". However, I suggest that we can and should look to ourselves as the source of the problem. In this article, I propose the """"public park"""" analogy as a first point of departure from current critical thinking, and as a framework with which to better understand possible conflict of interest in government and education. Moreover, in the age of Personal Cybernetics (personal electronics, wearable computing, implantables.com, etc.), this issue will become all the more important. When """"technology as extensions of mind and body"""" is no longer a metaphor, will we have already sold our heart and soul for software of a particular corporation, or will our thoughts be free?","",""
"2000","Linux: A bazaar at the edge of chaos","","",""
"2000","Free riding on Gnutella","An extensive analysis of user traffic on Gnutella shows a significant amount of free riding in the system. By sampling messages on the Gnutella network over a 24-hour period, we established that almost 70% of Gnutella users share no files, and nearly 50% of all responses are returned by the top 1% of sharing hosts. Furthermore, we found out that free riding is distributed evenly between domains, so that no one group contributes significantly more than others, and that peers that volunteer to share files are not necessarily those who have desirable ones. We argue that free riding leads to degradation of the system performance and adds vulnerability to the system. If this trend continues copyright issues might become moot compared to the possible collapse of such systems.","",""
"2001","Internet, innovation, and open source: Actors in the network","This paper describes the evolution of the Linux operating system, and studies the dynamics of socio-technical change using Linux as a case example.","",""
"2001","Management and virtual decentralised networks: The Linux project","This paper examines the latest of paradigms - the Virtual Network(ed) Organisation - and whether geographically dispersed knowledge workers can virtually collaborate for a project under no central planning. Co-ordination, management and the role of knowledge arise as the central areas of focus. The Linux Project and its development model are selected as a case of analysis and the critical success factors of this organisational design are identified. The study proceeds to the formulation of a framework that can be applied to all kinds of virtual decentralised work and concludes that value creation is maximized when there is intense interaction and uninhibited sharing of information between the organisation and the surrounding community. Therefore, the potential success or failure of this organisational paradigm depends on the degree of dedication and involvement by the surrounding community.","",""
"2001","Free software/free science","The issue of making money through the Open Source Free Software movement is examined and evaluated in comparison to science and the gift economy.","",""
"2001","Unexploited resources of online education for democracy: Why the future should belong to OpenCourseWare","With Massachusetts Institute of Technology's bold OpenCourseWare Initiative, one of the world's leading universities is making its teaching material accessible on the Internet, free of charge, to any user anywhere in the world. While this seems counterintuitive in the trend toward commercialization in today's educational markets, we argue that this strategy could not only prove successful economically, but also exploit human capital resources that would foster innovation and strengthen the democratic foundation of a knowledge-based society.","",""
"2001","Code, culture and cash: The fading altruism of open source development","The nexus of open source development appears to have shifted to Europe over the last ten years. This paper explains why this trend undermines cultural arguments about """"hacker ethics"""" and """"post-scarcity"""" gift economies. It suggests that classical economic theory offers a more succinct explanation for the peculiar international distribution of open source development: hacking rises and falls inversely to its opportunity cost. This finding throws doubt on the Schumpeterian assumption that the efficiency of industrial systems can be measured without reference to the social institutions that bind them.","",""
"2001","The Wall Street performer protocol: Using software completion bonds to fund open source software development","In their article """"The Street Performer Protocol and Digital Copyrights"""" (Kelsey and Schneier, 1999) suggest that copyright will become increasingly difficult to enforce. They propose a general mechanism for funding digital public works, the """"Street Performer Protocol"""" in which authors produce their work only after they receive enough contributions to make it worth their while. In this article, I sketch out a proposal for the creation of a software completion bond market. I think such a market would be a practical implementation of the """"Street Performer Protocol"""" for the funding of open source software. I first describe how such a bond market might work, and why I think the open source community needs a bond market. Then I examine the underlying economics of open source software. Finally, I review some of the existing and potential alternatives to a software completion bond market. [1].","",""
"2001","Lessons from open source: Intellectual property and courseware","This paper argues that secrecy mechanisms used by universities to protect intellectual property are wrong, and that a better model can be found in the Open Source movement.","",""
"2002","Cave or Community? An Empirical Examination of 100 Mature Open Source Projects","Starting with Eric Raymond's groundbreaking work, """"The Cathedral and the Bazaar"""", open-source software (OSS) has commonly been regarded as work produced by a community of developers. Yet, given the nature of software programs, one also hears of developers with no lives that work very hard to achieve great product results. In this paper, I sought empirical evidence that would help us understand which is more common - the cave (i.e., lone producer) or the community. Based on a study of the top 100 mature products on Sourceforge, I find a few surprising things. First, most OSS programs are developed by individuals, rather than communities. The median number of developers in the 100 projects I looked at was 4 and the mode was 1 - numbers much lower than previous numbers reported for highly successful projects! Second, most OSS programs do not generate a lot of discussion. Third, products with more developers tend to be viewed and downloaded more often. Fourth, the number of developers associated with a project was positively correlated to the age of the project. Fifth, the larger the project, the smaller the percent of project administrators.","",""
"2002","Open Source Intelligence","The Open Source movement has established over the last decade a new collaborative approach, uniquely adapted to the Internet, to developing high-quality informational products. Initially, its exclusive application was the development of software (GNU/Linux and Apache are among the most prominent projects), but increasingly we can observe this collaborative approach being applied to areas beyond the coding of software. One such area is the collaborative gathering and analysis of information, a practice we term """"Open Source Intelligence"""". In this article, we use three case studies - the nettime mailing list, the Wikipedia project and the NoLogo Web site - to show some the breadth of contexts and analyze the variety of socio-technical approaches that make up this emerging phenomenon.","",""
"2002","Copyleft vs. Copyright: A Marxist Critique","Copyright was invented by and for early capitalism, and its importance to that system has grown ever since. To oppose copyright is to oppose capitalism. Thus, Marxism is a natural starting point when challenging copyright. Marx's concept of a 'general intellect', suggesting that at some point a collective learning process will surpass physical labour as a productive force, offers a promising backdrop to understand the accomplishments of the free software community. Furthermore, the chief concerns of hacker philosophy, creativity and technological empowerment, closely correspond to key Marxist concepts of alienation, the division of labour, deskilling, and commodification. At the end of my inquiry, I will suggest that the development of free software provides an early model of the contradictions inherent to information capitalism, and that free software development has a wider relevance to all future production of information.","",""
"2003","Something Happened on the Way to the ©","                Intellectual property. It's a strange term, indicating from its structure that the questionable notion of property has been appended to something that, in a tangible sense, doesn't even exist. Difficult to grasp, like water, or air, yet at the same time so desirable to own...           In Anglo-American law, property is defined, as the eighteenth-century jurist Sir William Blackstone put it, as """"that sole and despotic dominion which one man claims and exercises over the external things of the world, in total exclusion of the right of any other individual in the universe"""" (Terry &amp; Guigni 207). For most physical things, the 'right' of exclusion seems simple enough to understand, and to control. Yet even there, when the boundaries blur, especially over space and time, the results of such 'rights' become less and less manageable, as indicated by the classic 'tragedy of the commons' (Hardin). And once we move outside of the physical realm, and into the world of ideas, or of feelings or the spirit, the notion of an exclusive 'right' of ownership steadily makes less and less sense.           It's an issue that's come to the fore with the rise of the Open Source movement, creating software that can be freely shared and used by anyone. There are many arguments about exactly is meant by 'free', though there's often an emphasis on freedom of ideas rather than price: """"think of 'free' as in 'free speech', not as in 'free beer'"""" is how one group describes it (Free Software Foundation). Unlike proprietary software such as Microsoft Windows, the source-code from which the programs are compiled is available is available for anyone to view, amend, extend. As yet, few programmers are paid to do so; certainly no-one is excluded from doing so. The results from this apparently anarchic and altruistic model would be startling for anyone coming from a conventional economics background: for example, Sourceforge, the main Open Source repository, currently hosts almost 60,000 projects, with almost ten times that number of active contributors (Sourceforge). Some of these projects are huge: for example, the Linux kernel is well over a million lines of code, whilst the Gnome user-interface is already almost twice that size. Open Source programs such as the 'LAMP' quadrivirate of the GNU/Linux operating-system, Apache web-server, MySQL database and PHP, Perl or Python scripting languages provide most of the software infrastructure for the Internet (Linux, Apache, MySQL, PHP, Perl, Python).           And the Internet returns the favour, by providing a space in which collaboration can happen quickly and for the most part transparently, without much regard for status or location. Yet central though the Internet may be to this new wave of shared 'public good', the core innovations of Open Source are more social than technological. Of these, probably the most important are a specific kind of collaboration, and an unusual twist on copyright law.           Eric Raymond's classic essay 'The Cathedral and the Bazaar' is one of the best descriptions of the social processes behind Open Source (Raymond). """"Every good work of software starts by scratching a developer's personal itch"""", says Raymond: see a need, tackle it, share the initial results, ask for help. Larry Wall, the initiator of Perl, """"wanted to create something that was so useful that it would be taken up by many people"""" (Moody 133), and consciously promoted it in much the same way as a missionary (Moody 131). Open access to communications and a culture of shared learning provides the space to """"release early, release often"""" and invite collaboration. Some projects, such as Apache and PHP, are run as a kind of distributed collective, but many are somewhat hierarchical, with a well-known lead-figure at the centre: Linus Torvalds for Linux, Larry Wall for Perl, Guido van Rossum for Python, Miguel de Icaza for Gnome. Yet the style rarely seems hierarchical in practice: the lead-figure's role is that of coordinator and final arbiter of quality, far removed from the militaristic 'command and control' so common in business environments.           What makes it work is that anyone can join in, identify a bug, submit a patch, volunteer to design some desirable function or feature, and gain personal satisfaction and social respect for doing so. Programmers’ motivations vary enormously, of course: some share their work as a kind of libertarian statement, whilst others are more driven by a sense of obligation to others in the software-development community, or in the wider world. Yet for many, perhaps most, it's the personal satisfaction that's most important: as Linus Torvalds comments, """"most of the good programmers do [Open Source] programming not because they expect to get paid or get adulation by the public, but because it is fun to program"""" (Torvalds &amp; Ghosh). In that sense it more closely resembles a kind of art-form rather than a conventional business proposition.           Realistically, many of the smaller Open Source projects are little more than student exercises, with limited real-world usefulness. But for larger, more relevant projects this borderless, inclusive collaboration usually results in code of very high quality and reliability – """"given enough eyeballs, all bugs are shallow"""" is another of Raymond's aphorisms – in stark contrast to the notorious security holes and general fragility of proprietary products from Redmond and elsewhere. And it leverages different people's skills to create an extraordinary degree of 'win/win', as Linus Torvalds points out: """"imagine ten people putting in one hour each every day on the project. They put in one hour of work, but because they share the end results they get nine hours of 'other peoples work' for free. It sounds unfair: get nine hours of work for doing one hour. But it obviously is not"""" (Torvalds &amp; Ghosh). It's this kind of return-on-investment that's making many businesses more than willing to embrace the 'insanity' of paying programmers to give away their time on Open Source projects (Pavlicek).           The hard part, for many businesses, is that it demands a very different approach to business relationships. """"Forget business as usual"""", writes Russell Pavlicek; """"forget about demanding your own way; forget fluffy, empty management speeches; forget about fudging facts; forget about marketing that alienates the community; forget about pushing hype rather than real value; forget about taking more than you give"""" (Pavlicek 131-7). When everything is open, and everyone is in effect a volunteer, none of those time-dishonoured tactics works well. But the real catch is the legal framework under which Open Source is developed and distributed. Conventionally, placing work in the public domain – the intellectual-property equivalent of the commons – means that anyone can apply even the minutest of changes and then declare it exclusively as their own. Walt Disney famously did exactly this with many classics, such as the Grimms' fairy-tales or Rudyard Kipling's Jungle Book. The Free Software Foundation's 'GNU Public License' – used for most Open Source software – avoids this by copyrighting the work, permitting freedom to view, amend and extend the code for any purpose, but requiring that any new version permit the same freedoms (GNU/FSF).           This inclusive approach – nicknamed 'copyleft' in contrast to conventional copyright – turns the usual exclusive model of intellectual property on its head. Its viral, self-propagating nature uses the law to challenge the law of property: everything it touches is – in principle – freed from exclusive private ownership. Larry Lessig and the Creative Commons legal team have extended this somewhat further, with machine-readable licenses that permit a finer granularity of choice in defining what uses of a work – a musical performance, a book or a Weblog, for example – are open or withheld (Creative Commons). But the central theme is that copyleft, together with the open nature of the Internet, """"moves everything that touches it toward the public domain"""" (Norlin). Which is not a happy thought for those whose business models depend on exclusion and control of access to intellectual property – such as Hollywood, the media and the biotechnology industry – nor, for that matter, for those who'd prefer to keep their secrets secret (AWOLBush).           Part of the problem, for such people, is a mistaken notion of what the Internet really is. It's not a pipe or a medium, like cable TV; it's more like a space or a place, a 'world of ends' (Searls &amp; Weinberger). Not so much infrastructure, to be bought and sold, but necessarily shared, it's more 'innerstructure', a kind of artificial force of nature: """"like the Earth's fertile surface, it derives much of its fertility from the life it supports"""" (Searls). Its key characteristics, argues Doc Searls, are that """"No-one owns it; Everyone can use it; Anyone can improve it"""". And these characteristics of the Internet ultimately arise not from the hardware – routers, cables, servers and the like – or even the software, but ultimately from an agreement – the Internet Protocol – and an idea – that network connections can and should be self-routing, beyond direct control.           Yet perhaps the most important idea that arises from this is that one of the most basic foundation-stones of Western society – the model of property as an exclusive 'right', a """"sole and despotic dominion"""" – simply doesn't work. This is especially true for supposed 'intellectual property', such as copyrights, trade-marks, patents, genome sequences, scientific theories: after all, from where do those ideas and patterns ultimately arise? Who owns that? In legal terms, there's no definable root for a trail of provenance, no means to identify all involved intermediaries, and hence no ultimate anchor for any kind of property claim. Many other types of intellectual property, such as domain-names, phrases, words, radio-frequencies, colours, sounds - the word 'Yes', the phrase 'The Real Thing', Ferrari red, the sound of a Harley-Davidson – can only be described as arbitrary expropriations from the public domain. In many senses, then, the whole legal edifice of intellectual property is little more than """"all smoke and mirrors"""", held together by lawyers' bluff – hardly a stable foundation for the much-vaunted 'information economy'! Whilst it's not quite true that """"nobody owns it"""", in practice the only viable ownership for any kind of intellectual property would seem to be that of a declaration of responsibility, of stewardship – such as a project-leader's responsibility for an Open Source project – rather than an arbitrary and ultimately indefensible assertion of exclusive 'right'.           So a simple question about intellectual property – is it copyright or copyleft? should source-code be proprietary or 'free'? – goes deeper and deeper into the 'innerstructure' of society itself. Miguel Icaza describes this well: """"as the years pass and you're working in this framework, you start to reevaluate in many areas your relationships with your friends and your family. The same ideas about free software and sharing and caring about other people start to permeate other aspects of your life"""" (Moody 323). Perhaps it's time to look more carefully to look more carefully not just at intellectual property, but at the 'rights' and responsibilities associated with all kinds of property, to reach a more equitable and sustainable means to manage the tangible and intangible resources of this world we share.           Works Cited          Blackstone, Sir William. """"Commentaries on the Laws of England."""" Book 2, 1765, 2, quoted in Andrew Terry and Des Guigni, Business, Society and the Law. Marrickville, Australia: Harcourt, Brace and Co., 1994.            Hardin, Garrett. """"The Tragedy of the Commons."""" Science 162 (1968): 1243-8. 10 Mar. 2003 &lt;http://www.constitution.org/cmt/tragcomm.htm&gt;.            “The Free Software Definition.” Free Software Foundation. 10 Mar. 2003 &lt;http://www.fsf.org/philosophy/free-sw.php&gt;.            Sourceforge. 9 Mar. 2003 &lt;http://sourceforge.net/&gt;.            Linux. 9 Mar. 2003 &lt;http://www.linux.org/&gt;.            GNOME. 9 Mar. 2003 &lt;http://www.gnome.org/&gt;.             Apache. The Apache Software Foundation. 9 Mar. 2003 &lt;http://www.apache.org/&gt;.            MySQL. 9 Mar. 2003 &lt;http://www.mysql.com/&gt;.            PHP. 9 Mar. 2003 &lt;http://www.php.net/&gt;.            Perl. 9 Mar. 2003 &lt;http://www.perl.org/&gt;.            Python. 9 Mar. 2003 &lt;http://www.python.org/&gt;.            Raymond, Eric S. The Cathedral and the Bazaar. 11 Aug. 1998. 9 Mar. 2003 &lt;http://www.openresources.com/documents/cathedral-bazaar&gt;. (Note: original location at http://tuxedo.org/~esr/writings/cathedral-bazaar/ is no longer accessible.)            Moody, Glyn. Rebel Code: Linux and the Open Source Revolution. London: Allen Lane/Penguin, 2001.            Torvalds, Linus, and Rishab Aiyer Ghosh. """"Interview with Linus Torvalds"""". First Monday 3.3 (1998). 9 Mar. 2003 &lt;http://www.firstmonday.dk/issues/issue3_3/torvalds/index.php&gt;.            Pavlicek, Russell C. Embracing Insanity: Open Source Software Development. Indianapolis: Sams Publishing, 2000.            """"Licenses – GNU Project."""" GNU/Free Software Foundation. 9 Mar. 2003 &lt;http://www.fsf.org/licenses/licenses.html#TOCWhatIsCopyleft&gt;.            Lessig, Lawrence (Larry). Home page. 9 Mar. 2003 &lt;http://cyberlaw.stanford.edu/lessig&gt;.            Creative Commons. 9 Mar. 2003 &lt;http://creativecommons.org/&gt;.            Norlin, Eric. Weblog. 23 Feb. 2003. 9 Mar. 2003 &lt;http://www.unchartedshores.com/blogger/archive/2003_02_23_ar...             ...chive3.html#90388497&gt;.            “G W Bush Went AWOL.” AWOLBush.com. 9 Mar. 2003 &lt;http://www.awolbush.com/&gt;.            Searls, Doc, and David Weinberger. World Of Ends: What the Internet Is and How to Stop Mistaking It for Something Else. 9 Mar. 2003 &lt;http://worldofends.com/&gt;.            Searls, Doc. """"Is Linux Infrastructure? Or Is it Deeper than That?"""" Linux Journal 14 May 2002. 10 Mar. 2003 &lt;http://www.linuxjournal.com/article.php?sid=6074&gt;.            ---. """"Setting Fire to Hollywood’s Plans for the Net: The GeekPAC Story"""". Linux Journal 29 Apr. 2002. 10 Mar. 2003 &lt;http://www.linuxjournal.com/article.php?sid=6033&gt;.                    Links          http://creativecommons.org/                         http://cyberlaw.stanford.edu/lessig                          http://sourceforge.net/                          http://tuxedo.org/~esr/writings/cathedral-bazaar/                          http://worldofends.com/                          http://www.apache.org/                          http://www.awolbush.com/                          http://www.constitution.org/cmt/tragcomm.htm                          http://www.firstmonday.dk/issues/issue3_3/torvalds/index.html                          http://www.fsf.org/licenses/licenses.html\lTOCWhatIsCopyleft                          http://www.fsf.org/philosophy/free-sw.html                          http://www.gnome.org/                          http://www.linux.org/                          http://www.linuxjournal.com/article.php?sid=6033                          http://www.linuxjournal.com/article.php?sid=6074                          http://www.mysql.com/                          http://www.openresources.com/documents/cathedral-bazaar                          http://www.perl.org/                          http://www.php.net/                          http://www.python.org/                          http://www.unchartedshores.com/blogger/archive/2003_02_23_archive3.html\l90388497                                   Citation reference for this article                      Substitute your date of access for Dn Month Year etc...            MLA Style            Graves, Tom. """"Something Happened on the Way to the ©""""  M/C: A Journal of Media and Culture&lt; http://www.media-culture.org.au/0304/03-somethinghappened.php&gt;.              APA Style            Graves, T. (2003, Apr 23). Something Happened on the Way to the ©. M/C: A Journal of Media and Culture, 6,&lt; http://www.media-culture.org.au/0304/03-somethinghappened.php&gt;                         ","",""
"2003","Treadmill Culture","                Since the first days of the World Wide Web, artists like myself have been exploring the new possibilities of network interactivity. Some good tools and languages have been developed and made available free for the public to use. This has empowered individuals to participate in the media in ways that are quite remarkable. Nonetheless, the future of independent media is clouded by legal, regulatory, and organisational challenges that need to be addressed. It is not clear to what extent independent content producers will be able to build upon the successes of the 90s – it is yet to be seen whether their efforts will be largely nullified by the anticyclones of a hostile media market.           Not so long ago, American news magazines were covering the Browser War. Several real wars later, the terms of surrender are becoming clearer. Now both of the major Internet browsers are owned by huge media corporations, and most of the states (and Reagan-appointed judges) that were demanding the break-up of Microsoft have given up. A curious about-face occurred in U.S. Justice Department policy when John Ashcroft decided to drop the federal case. Maybe Microsoft's value as a partner in covert activity appealed to Ashcroft more than free competition. Regardless, Microsoft is now turning its wrath on new competitors, people who are doing something very, very bad: sharing the products of their own labour.           This practice of sharing source code and building free software infrastructure is epitomised by the continuing development of Linux. Everything in the Linux kernel is free, publicly accessible information. As a rule, the people building this """"open source"""" operating system software believe that maintaining transparency is important. But U.S. courts are not doing much to help. In a case brought by the Motion Picture Association of America against Eric Corley, a federal district court blocked the distribution of source code that enables these systems to play DVDs. In addition to censoring Corley's journal, the court ruled that any programmer who writes a program that plays a DVD must comply with a host of license restrictions. In short, an established and popular media format (the DVD) cannot be used under open source operating systems without sacrificing the principle that software source code should remain in the public domain.           Should the contents of operating systems be tightly guarded secrets, or subject to public review? If there are capable programmers willing to create good, free operating systems, should the law stand in their way? The question concerning what type of software infrastructure will dominate personal computers in the future is being answered as much by disappointing legal decisions as it is by consumer choice. Rather than ensuring the necessary conditions for innovation and cooperation, the courts permit a monopoly to continue. Rather than endorsing transparency, secrecy prevails. Rather than aiming to preserve a balance between the commercial economy and the gift-economy, sharing is being undermined by the law.           Part of the mystery of the Internet for a lot of newcomers must be that it seems to disprove the old adage that you can't get something for nothing. Free games, free music, free pornography, free art. Media corporations are doing their best to change this situation. The FBI and trade groups have blitzed the American news media with alarmist reports about how children don't understand that sharing digital information is a crime. Teacher Gail Chmura, the star of one such media campaign, says of her students, """"It's always been interesting that they don't see a connection between the two. They just don't get it"""" (Hopper). Perhaps the confusion arises because the kids do understand that digital duplication lets two people have the same thing. Theft is at best a metaphor for the copying of data, because the original is not stolen in the same sense as a material object. In the effort to liken all copying to theft, legal provisions for the fair use of intellectual property are neglected.           Teachers could just as easily emphasise the importance of sharing and the development of an electronic commons that is free for all to use. The values advanced by the trade groups are not beyond question and are not historical constants. According to Donald Krueckeberg, Rutgers University Professor of Urban Planning, native Americans tied the concept of property not to ownership but to use. """"One used it, one moved on, and use was shared with others"""" (qtd. in Batt). Perhaps it is necessary for individuals to have dominion over some private data. But who owns the land, wind, sun, and sky of the Internet – the infrastructure? Given that publicly-funded research and free software have been as important to the development of the Internet as have business and commercial software, it is not surprising that some ambiguity remains about the property status of the dataverse.           For many the Internet is as much a medium for expression and the interplay of languages as it is a framework for monetary transaction. In the case involving DVD software mentioned previously, there emerged a grass-roots campaign in opposition to censorship. Dozens of philosophical programmers and computer scientists asserted the expressive and linguistic bases of software by creating variations on the algorithm needed to play DVDs. The forbidden lines of symbols were printed on T-shirts, translated into different computer languages, translated into legal rhetoric, and even embedded into DNA and pictures of MPAA president Jack Valenti (see e.g. Touretzky). These efforts were inspired by a shared conviction that important liberties were at stake. Supporting the MPAA's position would do more than protect movies from piracy. The use of the algorithm was not clearly linked to an intent to pirate movies. Many felt that outlawing the DVD algorithm, which had been experimentally developed by a Norwegian teenager, represented a suppression of gumption and ingenuity. The court's decision rejected established principles of fair use, denied the established legality of reverse engineering software to achieve compatibility, and asserted that journalists and scientists had no right to publish a bit of code if it might be misused.           In a similar case in April 2000, a U.S. court of appeals found that First Amendment protections did apply to software (Junger). Noting that source code has both an expressive feature and a functional feature, this court held that First Amendment protection is not reserved only for purely expressive communication. Yet in the DVD case, the court opposed this view and enforced the inflexible demands of the Digital Millennium Copyright Act. Notwithstanding Ted Nelson's characterisation of computers as literary machines, the decision meant that the linguistic and expressive aspects of software would be subordinated to other concerns. A simple series of symbols were thereby cast under a veil of legal secrecy. Although they were easy to discover, and capable of being committed to memory or translated to other languages, fair use and other intuitive freedoms were deemed expendable.           These sorts of legal obstacles are serious challenges to the continued viability of free software like Linux. The central value proposition of Linux-based operating systems – free, open source code – is threatening to commercial competitors. Some corporations are intent on stifling further development of free alternatives. Patents offer another vulnerability. The writing of free software has become a minefield of potential patent lawsuits. Corporations have repeatedly chosen to pursue patent litigation years after the alleged infringements have been incorporated into widely used free software. For example, although it was designed to avoid patent problems by an array of international experts, the image file format known as JPEG (Joint Photographic Experts Group) has recently been dogged by patent infringement charges. Despite good intentions, low-budget initiatives and ad hoc organisations are ill equipped to fight profiteering patent lawsuits. One wonders whether software innovation is directed more by lawyers or computer scientists. The present copyright and patent regimes may serve the needs of the larger corporations, but it is doubtful that they are the best means of fostering software innovation and quality.           Orwell wrote in his Homage to Catalonia,                     There was a new rule that censored portions of the newspaper must not be left blank but filled up with other matter; as a result it was often impossible to tell when something had been cut out.                     The development of the Internet has a similar character: new diversions spring up to replace what might have been so that the lost potential is hardly felt.           The process of retrofitting Internet software to suit ideological and commercial agendas is already well underway. For example, Microsoft has announced recently that it will discontinue support for the Java language in 2004. The problem with Java, from Microsoft's perspective, is that it provides portable programming tools that work under all operating systems, not just Windows. With Java, programmers can develop software for the large number of Windows users, while simultaneously offering software to users of other operating systems. Java is an important piece of the software infrastructure for Internet content developers. Yet, in the interest of coercing people to use only their operating systems, Microsoft is willing to undermine thousands of existing Java-language projects. Their marketing hype calls this progress.           The software industry relies on sales to survive, so if it means laying waste to good products and millions of hours of work in order to sell something new, well, that's business. The consequent infrastructure instability keeps software developers, and other creative people, on a treadmill.                     From Progressive Load by Andy Deck, artcontext.org/progload                   As an Internet content producer, one does not appeal directly to the hearts and minds of the public; one appeals through the medium of software and hardware. Since most people are understandably reluctant to modify the software running on their computers, the software installed initially is a critical determinant of what is possible. Unconventional, independent, and artistic uses of the Internet are diminished when the media infrastructure is effectively established by decree. Unaccountable corporate control over infrastructure software tilts the playing field against smaller content producers who have neither the advance warning of industrial machinations, nor the employees and resources necessary to keep up with a regime of strategic, cyclical obsolescence. It seems that independent content producers must conform to the distribution technologies and content formats favoured by the entertainment and marketing sectors, or else resign themselves to occupying the margins of media activity.           It is no secret that highly diversified media corporations can leverage their assets to favour their own media offerings and confound their competitors. Yet when media giants AOL and Time-Warner announced their plans to merge in 2000, the claim of CEOs Steve Case and Gerald Levin that the merged companies would """"operate in the public interest"""" was hardly challenged by American journalists. Time-Warner has since fought to end all ownership limits in the cable industry; and Case, who formerly championed third-party access to cable broadband markets, changed his tune abruptly after the merger. Now that Case has been ousted, it is unclear whether he still favours oligopoly.           According to Levin, global media                     will be and is fast becoming the predominant business of the 21st century ... more important than government. It's more important than educational institutions and non-profits. We're going to need to have these corporations redefined as instruments of public service, and that may be a more efficient way to deal with society's problems than bureaucratic governments. Corporate dominance is going to be forced anyhow because when you have a system that is instantly available everywhere in the world immediately, then the old-fashioned regulatory system has to give way (Levin).                   It doesn't require a lot of insight to understand that this """"redefinition,"""" this slight of hand, does not protect the public from abuses of power: the dissolution of the """"old-fashioned regulatory system"""" does not serve the public interest.                    From Lexicon by Andy Deck, artcontext.org/lexicon)           As an artist who has adopted telecommunications networks and software as his medium, it disappoints me that a mercenary vision of electronic media's future seems to be the prevailing blueprint. The giantism of media corporations, and the ongoing deregulation of media consolidation (Ahrens), underscore the critical need for independent media sources. If it were just a matter of which cola to drink, it would not be of much concern, but media corporations control content. In this hyper-mediated age, content – whether produced by artists or journalists – crucially affects what people think about and how they understand the world. Content is not impervious to the software, protocols, and chicanery that surround its delivery. It is about time that people interested in independent voices stop believing that laissez faire capitalism is building a better media infrastructure.           The German writer Hans Magnus Enzensberger reminds us that the media tyrannies that affect us are social products. The media industry relies on thousands of people to make the compromises necessary to maintain its course.                                The rapid development of the mind industry, its rise to a key position in modern society, has profoundly changed the role of the intellectual. He finds himself confronted with new threats and new opportunities. Whether he knows it or not, whether he likes it or not, he has become the accomplice of a huge industrial complex which depends for its survival on him, as he depends on it for his own. He must try, at any cost, to use it for his own purposes, which are incompatible with the purposes of the mind machine. What it upholds he must subvert. He may play it crooked or straight, he may win or lose the game; but he would do well to remember that there is more at stake than his own fortune (Enzensberger 18).                   Some cultural leaders have recognised the important role that free software already plays in the infrastructure of the Internet. Among intellectuals there is undoubtedly a genuine concern about the emerging contours of corporate, global media. But more effective solidarity is needed. Interest in open source has tended to remain superficial, leading to trendy, cosmetic, and symbolic uses of terms like """"open source"""" rather than to a deeper commitment to an open, public information infrastructure. Too much attention is focussed on what's """"cool"""" and not enough on the road ahead.           Various media specialists – designers, programmers, artists, and technical directors – make important decisions that affect the continuing development of electronic media. Many developers have failed to recognise (or care) that their decisions regarding media formats can have long reaching consequences. Web sites that use media formats which are unworkable for open source operating systems should be actively discouraged. Comparable technologies are usually available to solve compatibility problems. Going with the market flow is not really giving people what they want: it often opposes the work of thousands of activists who are trying to develop open source alternatives (see e.g. Greene).           Average Internet users can contribute to a more innovative, free, open, and independent media – and being conscientious is not always difficult or unpleasant. One project worthy of support is the Internet browser Mozilla. Currently, many content developers create their Websites so that they will look good only in Microsoft's Internet Explorer. While somewhat understandable given the market dominance of Internet Explorer, this disregard for interoperability undercuts attempts to popularise standards-compliant alternatives. Mozilla, written by a loose-knit group of activists and programmers (some of whom are paid by AOL/Time-Warner), can be used as an alternative to Microsoft's browser. If more people use Mozilla, it will be harder for content providers to ignore the way their Web pages appear in standards-compliant browsers. The Mozilla browser, which is an open source initiative, can be downloaded from http://www.mozilla.org/.           While there are many people working to create real and lasting alternatives to the monopolistic and technocratic dynamics that are emerging, it takes a great deal of cooperation to resist the media titans, the FCC, and the courts. Oddly enough, corporate interests sometimes overlap with those of the public. Some industrial players, such as IBM, now support open source software. For them it is mostly a business decision. Frustrated by the coercive control of Microsoft, they support efforts to develop another operating system platform. For others, including this writer, the open source movement is interesting for the potential it holds to foster a more heterogeneous and less authoritarian communications infrastructure. Many people can find common cause in this resistance to globalised uniformity and consolidated media ownership.           The biggest challenge may be to get people to believe that their choices really matter, that by endorsing certain products and operating systems and not others, they can actually make a difference. But it's unlikely that this idea will flourish if artists and intellectuals don't view their own actions as consequential. There is a troubling tendency for people to see themselves as powerless in the face of the market. This paralysing habit of mind must be abandoned before the media will be free.           Works Cited          Ahrens, Frank. """"Policy Watch."""" Washington Post (23 June 2002): H03. 30 March 2003 &lt;http://www.washingtonpost.com/ac2/wp-dyn/A27015-2002Jun22?la...       ...nguage=printer&gt;.            Batt, William. """"How Our Towns Got That Way."""" 7 Oct. 1996. 31 March 2003 &lt;http://www.esb.utexas.edu/drnrm/WhatIs/LandValue.htm&gt;.            Chester, Jeff. """"Gerald Levin's Negative Legacy."""" Alternet.org 6 Dec. 2001. 5 March 2003 &lt;http://www.democraticmedia.org/resources/editorials/levin.php&gt;.            Enzensberger, Hans Magnus. """"The Industrialisation of the Mind."""" Raids and Reconstructions. London: Pluto Press, 1975. 18.            Greene, Thomas C. """"MS to Eradicate GPL, Hence Linux."""" 25 June 2002. 5 March 2003 &lt;http://www.theregus.com/content/4/25378.php&gt;.            Hopper, D. Ian. """"FBI Pushes for Cyber Ethics Education."""" Associated Press 10 Oct. 2000. 29 March 2003 &lt;http://www.billingsgazette.com/computing/20001010_cethics.php&gt;.            Junger v. Daley. U.S. Court of Appeals for 6th Circuit. 00a0117p.06. 2000. 31 March 2003 &lt;http://pacer.ca6.uscourts.gov/cgi-bin/getopn.pl?OPINION=00a0...             ...117p.06&gt;.            Levin, Gerald. """"Millennium 2000 Special."""" CNN 2 Jan. 2000.            Touretzky, D. S. """"Gallery of CSS Descramblers."""" 2000. 29 March 2003 &lt;http://www.cs.cmu.edu/~dst/DeCSS/Gallery&gt;.           Links          http://artcontext.org/lexicon/                         http://artcontext.org/progload                          http://pacer.ca6.uscourts.gov/cgi-bin/getopn.pl?OPINION=00a0117p.06                          http://www.billingsgazette.com/computing/20001010_cethics.html                          http://www.cs.cmu.edu/~dst/DeCSS/Gallery                          http://www.democraticmedia.org/resources/editorials/levin.html                          http://www.esb.utexas.edu/drnrm/WhatIs/LandValue.htm                          http://www.mozilla.org/                          http://www.theregus.com/content/4/25378.html             http://www.washingtonpost.com/ac2/wp-dyn/A27015-2002Jun22?language=printer                                   Citation reference for this article                      Substitute your date of access for Dn Month Year etc...            MLA Style            Deck, Andy. """"Treadmill Culture """"  M/C: A Journal of Media and Culture&lt; http://www.media-culture.org.au/0304/04-treadmillculture.php&gt;.             APA Style                    Deck, A. (2003, Apr 23). Treadmill Culture . M/C: A Journal of Media and Culture, 6,&lt; http://www.media-culture.org.au/0304/04-treadmillculture.php&gt;                         ","",""
"2003","The Institutional Design of Open Source Programming: Implications for Addressing Complex Public Policy and Management Problems"," Recently, an exciting approach to solving complex problems has evolved out of computer science, called Open Source programming. In open source software development settings, programmers freely share their intellectual property ? their readable programming source code ? over the Internet. Some open source endeavors have resulted in very complex, high-quality software products, of which the best-known are the Linux operating system and the Apache Web server. A great advantage of an Internet-based open source approach is its potential to achieve global collective action toward developing robust solutions to complex programming problems. This paper argues that open source has potential application beyond computer programming. Open source principles could potentially be applied to almost any intellectual endeavor, and may be a very important innovation toward harnessing global collaboration toward solving complex public policy and management problems.  Little research has been published outlining the details of how successful open source programming endeavors are achieved, such as how projects are initiated and organized over time, what rules for participation have been established, and how the methods for maintaining versions of new submissions have been managed. The institutional designs and management of open source projects could be critical for ensuring participants' willingness to collaborate and for recruiting new team members. This paper and the research program it describes, attempts to address this gap. It provides a summary of the """"life cycle"""" of open source programming projects based on existing literature that is largely focused on high-profile open source projects like Linux and Apache Web Server. It then provides interim results from an on-going study of the institutional designs of open source programming projects. It concludes by presenting some examples of non-programming projects that are beginning to apply open source or licensing principles in areas outside of programming and by presenting an example of how these principles might be applied to complex problems beyond programming in the realm of environmental policy and management. ","",""
"2003","The open code market","The Open Code Market (OCM) is both an open market for code, as well as a market for open code. However, it aims mainly to become a free market for software, as well as a market for Free Software. The OCM introduces into the Free/Open Source movement an economic incentive, to help align the priorities of Free/Open Source developers with those of the end users.","",""
"2003","The Linux managing model","This study focuses on the distinguishing traits of the Linux managing model. It introduces the concept of process to capture the idea of impermanence, dissolvability and change. Far from being a predictable flow of programming, assembling and releasing activities, it is suggested that the Linux development process displays a stream of activities that keep feeding back into each other, thus creating a complex and unpredictable outcome. The paper further introduces the concept of contingent response patterns to investigate the interaction flows occurring on the Linux mailing lists and subsume patch postings, bug reports and the associated reviewing and debugging activities under its umbrella. The enactment-selection-retention (ESR) model is subsequently brought forward to conceptualize this process as enactment of programming skills subject to selection activities conducted by Torvalds who retains the selected features and feeds them back to the developerso pool to undergo further enactment activities. Key managerial decisions concerning portability and modularity are, subsequently, analyzed through the lenses of the ESR model to show that Linux features an unconventional decision-making process whereby decisions follow rather than precede actions. Finally, Torvaldso beliefs are investigated in the Bitkeeper context to argue that the Linux managing model leans toward adaptability rather than adaptation.","",""
"2003","Democratizing software: Open source, the hacker ethic, and beyond","The development of computer software and hardware in closed-source, corporate environments limits the extent to which technologies can be used to empower the marginalized and oppressed. Various forms of resistance and counter-mobilization may appear, but these reactive efforts are often constrained by limitations that are embedded in the technologies by those in power. In the world of open source software development, actors have one more degree of freedom in the proactive shaping and modification of technologies, both in terms of design and use. Drawing on the work of philosopher of technology Andrew Feenberg, I argue that the open source model can act as a forceful lever for positive change in the discipline of software development. A glance at the somewhat vacuous hacker ethos, however, demonstrates that the technical community generally lacks a cohesive set of positive values necessary for challenging dominant interests. Instead, Feenbergos commitment to """"deep democratization"""" is offered as a guiding principle for incorporating more preferable values and goals into software development processes.","",""
"2003","Licence fees and GDP per capita: The case for open source in developing countries","There is a strong case for free software (also known as open source or libre software) being deployed widely in developing countries. This paper describes three reasons in particular: free software is a skills enabling platform; it is far cheaper; and it is more adaptable to local needs. The free software development community provides an environment of intensive interactive skills development at little explicit cost, which is particularly useful for local development of skills, especially in economically disadvantaged regions. Meanwhile, the controversy over total costs of ownership (TCO) of free vs. proprietary software is not applicable to developing countries and other regions with low labour costs, where the TCO advantage lies with free software, and the share of licence fees in TCO is much higher than in (richer) high labour cost countries. The note concludes with a table comparing license fees for proprietary software against GDP per capita for 176 countries.","",""
"2003","Collaborative development of open content: A process model to unlock the potential for African universities"," Given the cost of content, the under-resourcing of universities and the scattered nature of expertise in Africa, the collaborative development of open content seems like a useful way to get high-quality, locally-relevant content for using to enhance teaching-and-learning. However, there is currently no published operational model to guide institutions or individuals in creating collaborative open content projects. This paper examines lessons learned from open source software development and uses these lessons to build the foundations of a process model for the collaborative development of open content. ","",""
"2003","Open content and value creation","The borderline between production and consumption of media content is not so clear as it used to be. For example on the Internet, many people put a lot of effort into producing personal homepages in the absence of personal compensation. They publish everything from holiday pictures to complete Web directories. Illegal exchange of media material is another important trend that has a negative impact on the media industry.  In this paper, I consider open content as an important development track in the media landscape of tomorrow. I define open content as content possible for others to improve and redistribute and/or content that is produced without any consideration of immediate financial reward ? often collectively within a virtual community. The open content phenomenon can to some extent be compared to the phenomenon of open source. Production within a virtual community is one possible source of open content. Another possible source is content in the public domain. This could be sound, pictures, movies or texts that have no copyright, in legal terms.  Which are the driving forces for the cooperation between players that work with open content? This knowledge could be essential in order to understand the dynamics of business development, technical design and legal aspects in this field. In this paper I focus on these driving forces and the relationships between these players.  I have studied three major open content projects. In my analysis, I have used Gordijnos (2002) value modeling method """"e3value"""", modified for open content value creation and value chains. Open content value chains look much the same as commercial value chains, but there are also some major differences. In a commercial value chain, the consumerso needs trigger the entire chain of value creation. My studies indicate that an open content value chain is often triggered by what the creators and producers wish to make available as open content.  Motivations in non-monetary forms play a crucial role in the creation of open content value chains and value. My study of these aspects is based on Feller and Fitzgeraldos (2002) three perspectives on motivations underlying participation in the creation of open source software.","",""
"2003","The Usability of Open Source Software"," Open source communities have successfully developed a great deal of software although most computer users only use proprietary applications. The usability of open source software is often regarded as one reason for this limited distribution. In this paper we review the existing evidence of the usability of open source software and discuss how the characteristics of open source development influence usability. We describe how existing human-computer interaction techniques can be used to leverage distributed networked communities, of developers and users, to address issues of usability. ","",""
"2003","Clustering and dependencies in free/open source software development: Methodology and tools","This paper addresses the problem of measurement of non-monetary economic activity, specifically in the area of free/open source software communities. It describes the problems associated with research on these communities in the absence of measurable monetary transactions, and suggests possible alternatives. A class of techniques using software source code as factual documentation of economic activity is described and a methodology for the extraction, interpretation and analysis of empirical data from software source code is detailed, with the outline of algorithms for identifying collaborative authorship and determining the identity of coherent economic actors in developer communities. Finally, conclusions are drawn from the application of these techniques to a base of software.","",""
"2004","Open Source, Anarchy, and the Utopian Impulse","                                         I consider that the golden rule requires that if I like a program I must share it with other people who like it. Software sellers want to divide the users and conquer them, making each user agree not to share with others. I refuse to break solidarity with other users in this way. I cannot in good conscience sign a nondisclosure agreement or a software license agreement. Richard Stallman (GNU Manifesto)                                     There is much more to Stallman’s Manifesto […] Suffice it to say that on the surface, it read like a socialist polemic, but I saw something different. I saw a business plan in disguise. Michael Tiemann (72)                       The current discourse surrounding the rapid development and deployment of “free” and “open source” software and operating systems is framed by an undeniably utopian impulse. The “openness” of open source software is informed by concerns both practical (freedom from oppressive software production and licensing/copyright schemes) and ideological (the valorisation of anarchic organizational forms, communal production, and public property rights). The utopian impulse that underwrites this discourse is important for many reasons, but what I want to trace here is the trajectory from ideological position to practical action as it relates to differing forms of utopianism. The initial anarcho-socialist utopian move initiated by Richard Stallman’s GNU (GNU’s Not UNIX) Project and Free Software Foundation (FSF) is currently being transformed into an organizational utopia in the form of the Open Source Movement (OSM). The purpose here is not to take sides in the philological/philosophical debate over the definitions and relative merits of “free” versus “open source” software or to lament the passing of a missed opportunity, but to address the intimations of hope and deprival (with apologies to Grant) that can be gleaned from the relationship between utopianism and socio-technological practices.           The popularity of open source development ideals and practices indicates a certain dissatisfaction with corporate technoculture on the part of some (many?) of those who work in these institutions. This dissatisfaction is clearly evident in Richard Stallman’s GNU Manifesto wherein he critiques the shift from public domain to copyrighted software development that has occurred in the last three decades. Recalling Brian Winston’s theorization of technological development, the move toward copyrighted software appears to have come as a result of the increasing diffusion of computing hardware in the 1980’s and the practical realization of software development as an economically rationalized for-profit enterprise. Prior to the broad commodification of software, programmers shared knowledge and code without worrying about software licenses and copyrights, institutionally commodified intellectual property, and non-disclosure agreements (at least according to Stallman’s experience). Stallman’s heroic effort to create the GNU system is thus not only a direct attack on commodified software production, but a consciously utopian attempt to recapture the “open” communal programming practices that existed during the 1960’s and 70’s.           The utopian impulse found in this open form of software development is significant precisely because it underwrites recent efforts to reject current copyright regimes and, by extension, techno-industrial oligarchies. This potential is enabled by newly available forms of grassroots software development (code sharing and development via the Internet being the most obvious example). Stallman introduced and encouraged a licensing system that expressly prohibited the copyrighting of software developed using GNU software protocols and standards (termed “copyleft”). The lag between the initial deployment of Stallman’s early software efforts and their uptake by the wider computing community came as increases in computer literacy, technology markets, affordable personal computing power, and broadband CMC networks came along in the 1990’s. The OSM’s recent mobilization around Linux continues and parallels Stallman’s efforts via the adoption of the GNU license and copyleft. While the hallmarks of Stallman’s communal software production system remain, the overall nature of Open Source software is framed by a rather different notion of utopian openness than is evident in Stallman’s manifesto.           This brings me to the broader notion of an anarcho-utopianism framed by what Bookchin has identified as the twin goals of individual liberty and social democracy. Claims are already being made that practices related to open source software development and its emergent virtually interconnected organizational form may provide the basis for (re)imagining systems of social governance while simultaneously providing the practical infrastructure by which these new forms may be manifested:           The experience of open source development, or even just the acceptance of its value as a model for others, provides a real-life practice for the deeper change in perspective required if we are to move into a more networked and emergent understanding of our world. The local community must be experienced as a place to implement policies, incrementally, that will eventually have an effect on the whole. (Rushkoff 61)           Suggestions that the FSF’s and OSM’s methods of software development may serve as a model for more open and democratic policy making resonates with political theory in general, and social democracy and anarchism in particular. But neither the OSM nor the FSF is a political platform. They are simply modalities of software production which find their foundations in communal forms of decision making, intellectual labour, and dissemination. A utopian impulse is nonetheless revealed in the typically vague invocations of political anarchism and social democratic ideals that accompany the discursive promotion and legitimization of these modalities. The FSF advocates a broadly social anarchistic approach allied with a desire to overturn entirely commodified software production. The OSM, on the other hand, is more concerned with a kind of lifestyle anarchism that focuses on increasing programmer and user freedom within existing frameworks of software production and use. For Bookchin, the latter form of anarchism is positive insofar it advocates individual liberty, but it ultimately undermines the broader goals of anarchism by focusing on transient notions of individualism. The result is a situation wherein “the word anarchy will become part of the chic bourgeois vocabulary of the coming century — naughty, rebellious, insouciant, but deliciously safe” (3). It is interesting to note in passim the various discursive entanglements of anarchism and the Internet that have occurred since 1995, the time of Bookchin’s statement.           The utopian discourse that weaves its way through the non-technical discussions surrounding GNU, Linux, and other Open Source projects is certainly strong, but it begs the question of exactly what kinds of utopias are being offered ? Henri Lefebvre was rather suspicious of utopian thought because it is so frequently allied with efforts to legitimize nationalistic and totalitarian organizational practices. While suggesting that utopian thought was useful, he would only go so far as to warn that any such thought must avoid notions of a revolution that would simply substitute one state-sanctioned form of organized production with another, arguing instead for a “transformation of society [that] presupposes a collective ownership and management of space [we could say “society’ or even “software” here in place of “space] founded on the permanent participation of the ‘interested parties’, with their multiple, varied and even contradictory interests” (422). For Lefebvre, any useful form of utopianism is not a matter of coming up with alternative state apparatuses, but of somehow creating the conditions through which an open orientation to future possibilities might allow for the foundation of a more socially democratic society.           The FSF comes closest to fulfilling this ideal—at least within the realm of computing—insofar its attendant communities are involved less in the creation of a new institutional form than in the propagation of practices and desires for more open forms of software development. As such, the FSF seems to deploy the kind of utopian thinking and practice that Lefebvre finds useful. There is hope (social and computational) in this kind of utopian orientation because its socio-institutional functioning is left forever open-ended by way of its locating productive practices in communal formations. The FSF offers an idealized mode of communally open software development while refusing to provide an overarching and institutionalized organizational form by which it is to be utilized.           Borrowing heavily from the FSF’s ideals and practices, the OSM’s efforts to integrate practices of communal software development into contemporary techno-capitalism is not simply an intimation of deprival — a moment to lament the passing of the FSF’s utopian ideals — rather, the OSM constitutes what Deleuze and Guattari refer to as a moment of actualization whereby the virtual (and utopian) potential future(s) of communal software development cross the practico-material threshold to become manifest practices. Stallman’s GNU existed in the rather rarefied realm of hardcore coders for years before Torvald’s Linux took open/free software principles into the mainstream. The moment of actualization was not simply technical (available hardware, software, programmers, networks, etc.): it was the recognition that communal “copylefted” programming could “find a place” in the everyday structures of IT industries, services, and markets. It is the moment when Tiemann sees a business plan in Stallman’s “socialist polemic”. At this point that the utopian orientation and ideals promoted by the FSF transforms into an organizational utopia spearheaded by the OSM.           The debate over this transformation shows few signs of abating any time soon. Stallman feels that Eric Raymond’s (the spiritual “leader” of the OSM) promotion of a potentially massive, and certainly for-profit, industry founded on the implementation and support of open source software defeats the basic (utopian) principles of free software. Echoing Bookchin’s concerns about lifestyle anarchism, Stallman worries that the OSM will simply result in the re-introduction of all of those things that drove him out of institutional software development in the first place: “the rhetoric of ‘open source’ focuses on the potential to make high quality, powerful software, but shuns the ideas of freedom, community and principle” (1999:70) .           The FSF’s social utopianism thus appears to provide the productive content, but not the political form, for the more practically minded utopianism of the OSM, which offers an organizational utopia more akin to the “substitutive” utopias disavowed by Lefebvre. As Martin Parker argues, utopian thought and practice tends to be organizational in nature: “most, if not all, fictional and actual utopias rely on a re-formulation of principles of social order. They are in that sense organized, though often on different principles to the market managerial hegemony” (217-218). Stallman’s open anarcho-utopianism commits to an avoidance of market managerial hegemony. The OSM, however, not only cooperates with market hegemony, it seeks to find a place within it. This is a crucial difference. The openness introduced by the FSF is incorporated by the OSM only at the level of software production itself, thus containing and integrating its communal practices in the service of existing market needs and structures. The OSM is thus likely only a threat to Microsoft, and this only because it proffers a new business model. Indeed, the popular appeal of the OSM’s version of open source as a metaphor and model for businesses suggests that it may be an easily, and safely, appropriated set of practices. On the other hand, the FSF’s promotion of a more “socialist” approach to software production and use is based on the same basic programming practices and it will therefore be rather difficult to exact some sort of industrial control of copyright and/or intellectual property where open source software is concerned. Whether or not these two approaches are compatible, or if users will push their development into as yet unseen directions, is by no means clear at this point.           With open source development poised on the verge of being the “next big thing”, the manifest expression of its anarchic utopian impulse in the form of treatises and essays is somewhat limited insofar as the community is primarily composed of programmers rather than social theorists. Nevertheless, the utopian impulse is becoming more clearly expressed where it perhaps matters most: as an emergent set of practices in the domain of software production and use. The “kernel” of openness introduced by both the FSF and the OSM thus needs to be addressed in detail, and sooner rather than later, because it is in the struggle between these two forms of anarchic utopianism that the broader sociopolitical implications of a radically different form of software production will be played out.           About the Author           Dale Bradley is an Assistant Professor in the Dept. of Communications, Popular Culture, and Film at Brock University, Canada. His research interests include the discursive analysis of contemporary technoculture and the historical emergence of cybersociety.           Email: dbradley@brocku.ca                        Works Cited              Bookchin, Murray. Social Anarchism or Lifestyle Anarchism. San Francisco: AK Press, 1995.               Deleuze, Gilles &amp; Felix Guattari. A Thousand Plateaus. Minneapolis: U of Minnesota Press, 1987.               Grant, George. Technology and Empire: Perspectives on North America. Toronto: House of Anansi, 1969.               Lefebvre, Henri. The Production of Space. Trans. Donald Nicholson-Smith. Oxford UK: Blackwell, 1991.               Parker, Martin. ‘Utopia and the Organizational Imagination: Eutopia’. Utopia and Organization. Ed. Martin Parker. Oxford UK: Blackwell, 2002.               Rushkoff, Douglas. Open Source Democracy. London: Demos, 2003.               Full text available under open source licensing at:               http://www.demos.co.uk/catalogue/opensourcedemocracy_page292.aspx                 http://www.gnu.org/gnu/manifesto.html               Stallman, Richard. ‘The GNU Operating System and the Free Software Movement’. Open Sources: Voices from the Open Source Revolution. Eds. Chris DiBona, Sam Ockman &amp; Mark Stone. Sebastopol CA: O’Reilly &amp; Associates,1999.               Tiemann, Michael. ‘Future of Cygnus Solutions: An Entrepreneur’s Account’. Open Sources: Voices from the Open Source Revolution. Eds. Chris DiBona, Sam Ockman &amp; Mark Stone. O’Reilly &amp; Associates, Sebastopol CA: 1999               Winston, Brian. Misunderstanding Media. Harvard U Press, Cambridge MA: 1986               For a brief overview of the debate between Stallman and Raymond, see ‘Whence the Source: Untangling the Open Source/Free Software Debate’ at:                 http://opensource.oreilly.com/news/scoville_0399.html)                                      Citation reference for this article             MLA Style              Bradley, Dale. """"Open Source, Anarchy, and the Utopian Impulse"""" M/C: A Journal of Media and Culture &lt;http://www.media-culture.org.au/0406/03_Bradley.php&gt;.              APA Style              Bradley, D. (2004, Jul1). Open Source, Anarchy, and the Utopian Impulse. M/C: A Journal of Media and Culture, 7, &lt;http://www.media-culture.org.au/0406/03_Bradley.php&gt;                                                                  ","",""
"2004","Open Content Communities","                  In this brief essay I sketch the characteristics  of an open content community by considering a number of prominent examples,  reviewing sociological literature, teasing apart the concepts of open and  voluntary implicit in most usages of the term, and I offer a definition in which  the much maligned possibility of 'forking' is actually an integral aspect of  openness. Introduction  What is often meant by the term 'open' is a  generalization from the Free Software, Open Source and open standards movements.  Communities marshaling themselves under these banners cooperatively produce, in  public view, software, technical standards, or other content that is intended to  be widely shared. Free Software and Open Source  The Free Software movement was begun by Richard  Stallman at MIT in the 1980s. Previously, computer science operated within the  scientific norm of collaboration and information sharing. When Stallman found it  difficult to obtain the source code of a troublesome Xerox printer, he feared  that the norms of freedom and openness were being challenged by a different,  proprietary, conceptualization of information. To challenge this shift he  created the GNU Project in 1984 (Stallman 1998), the Free Software Foundation  (FSF) in 1985 (Stallman 1996), and the authored the GNU General Public License  in 1989. The goal of the GNU Project was to create a free  version of the UNIX computing environment with which many computer practitioners  were familiar with, and even contributed to, but was increasingly being  encumbered with proprietary claims. GNU is playful form of a recursive acronym:  GNU is Not Unix. The computing environment was supposed to be similar to but  independent of UNIX and include everything a user needed including an operating  system kernel (e.g., Hurd) and common applications such as small utilities, text  editors (e.g., EMACS) and software compilers (e.g,. GCC). The FSF is now the principle sponsor of the GNU  Project and focuses on administrative issues such as copyright licenses, policy,  and funding issues; software development and maintenance is still an activity of  GNU. The GPL is the FSF's famous copyright license for 'free software'; it  ensures that the 'freedom' associated with being able to access and modify  software is maintained with the original software and its derivations. It has  important safeguards, including its famous 'viral' provision: if you modify and  distribute software obtained under the GPL license, your derivation also must be  publicly accessible and licensed under the GPL. In 1991, Linus Torvalds started development of  Linux: a UNIX like operating system kernel, the core computer program that  mediates between applications and the underlying hardware. While it was not part  of the GNU Project, and differed in design philosophy and aspiration from the  GNU's kernel (Hurd), it was released under the GPL. While Stallman's stance on  'freedom' is more ideological, Torvalds approach is more pragmatic. Furthermore,  other projects, such as the Apache web server, and eventually Netscape's Mozilla  web browser, were being developed in open communities and under similar licenses  except that, unlike the GPL, they often permit proprietary derivations. With  such a license, a company may take open source software, change it, and include  it in their product without releasing their changes back to the community. The tension between the ideology of free software  and its other, additional, benefits led to the concept of Open Source in 1998.  The Open Source Initiative (OSI) was founded when, """"We realized it was time to  dump the confrontational attitude that has been associated with 'free software'  in the past and sell the idea strictly on the same pragmatic, business-case  grounds that motivated Netscape"""" (OSI 2003). Since the open source label is  intended to cover open communities and licenses beyond the GPL, they have  developed a meta (more abstract) Open Source Definition (OSI 1997) which defines  openness as:  Free redistribution     Accessible source code Permits derived works     Ensures the integrity of the author's source code     Prohibits discrimination against persons or groups     Prohibits discrimination against fields of endeavor     Prohibits NDA (Non-Disclosure Agreement) entanglements     Ensures the license must not be specific to a product     Ensures the license must not restrict other software     Ensures the license must be technology-neutral   A copyright license which is found by OSI to  satisfy these requirements will be listed as a OSI certified/approved license,  including the GPL of course. Substantively, Free Software and Open Source are  not that different: the differences are of motivation, personality, and  strategy. The FLOSS (Free/Libre and Open Source Software) survey of 2,784  Free/Open Source (F/OS) developers found that 18% of those that identified with  the Free Software community and 9% of those that identified with the Open Source  community considered the distinction to be 'fundamental' (Ghosh et al. 2002:55).  Given the freedom of these communities, forking (a split of the community where  work is taken in a different direction) is common to the development of the  software and its communities. One can conceive of Open Source movement as having  forked from Free Software movement. The benefits of openness are not limited to the  development of software. The Internet Engineering Task Force (IETF) and World  Wide Web Consortium (W3C) host the authoring of technical specifications that  are publicly available and implemented by applications that must interoperably  communicate over the Internet. For example, different Web servers and browsers  should be able to work together using the technical specifications of HTML,  which structures a Web page, and HTTP, which is used to request and send Web  pages. The approach of these organizations is markedly different from the 'big  S' (e.g., ISO) standards organizations which typically predicate membership on  nationality and often only provide specifications for a fee. This model of  openness has extended even to forms of cultural production beyond technical  content. For example, the Wikipedia is a collaborative encyclopedia and the  Creative Commons provides licenses and community for supporting the sharing of  texts, photos, and music. Openness and Voluntariness  Organization can be characterized along  numerous criteria including size; public versus private ownership; criterion for  membership; beneficiaries (cui bono); Hughes's voluntary, military,  philanthropic, corporate, and family types; Parsons's social pattern variables;  and Thompson and Tuden's decision making strategies, among others (Blau and  Scott 1962:40). I posit that within the contemporary usage of the term 'open,'  one can identify a number of defining characteristics as well as an implicit  connotation of voluntariness. Openness  The definition of an 'open' community in the  previous section is extensional: describing the characteristics of Free/Open  Software (F/OS), and open standards and content. While useful, this approach is  incomplete because such a description is of products, not of the social  organization of producers. For example, private firms do release F/OS software  but this tells us little about how work is done 'in the open.' The approach of Tzouris was to borrow from the  literature of 'epistemic' communities so as to provide four characteristics of  'free/open' communities:    Shared normative and principled beliefs: refers to the shared understanding    of the value-based rationale for contributing to the software.   Shared causal beliefs: refers to the shared causal understanding or the    reward structures. Therefore, shared causal beliefs have a coordinating effect    on the development process.   Shared notions of validity: refers to contributors' consensus that the    adopted solution is a valid solution for the problem at hand.   Common policy enterprise: refers to a common goal that can be achieved    through contributing code to the software. In simple words, there is a mutual    understanding, a common frame of reference of what to develop and how to do    it. (Tzouris 2002:21)  However, these criteria seem over-determined: it  is difficult to imagine a coherent community ('open' or otherwise) that does not  satisfy these requirements. Consequently, I provide an alternative set of  criteria that also resists myopic notions of perfect 'openness' or 'democracy.'  Very few organizations have completely homogeneous social structures. As argued  in Why the Internet is Good: Community Governance That Works Well (Reagle 1999),  even an organization like the IETF with the credo of, """"We reject kings,  presidents and voting. We believe in rough consensus and running code,"""" has  explicit authority roles and informal elders. Consequently, in the following  definition of open communities there is some room for contention. An open community delivers or demonstrates:   Open products: provides products which are available under licenses like    those that satisfy the Open Source Definition.     Transparency: makes its processes, rules, determinations, and their    rationales available.     Integrity: ensures the integrity of the processes and the participants'    contributions.     Non-discrimination: prohibits arbitrary discrimination against persons,    groups, or characteristics not relevant to the community's scope of activity.    Persons and proposals should be judged on their merits. Leadership should be    based on meritocratic or representative processes.     Non-interference: the linchpin of openness, if a constituency disagrees    with the implementation of the previous three criteria, the first criteria    permits them to take the products and commence work on them under their own    conceptualization without interference. While 'forking' is often complained    about in open communities -- it can create some redundancy/inefficiency -- it is    an essential characteristic and major benefit of open communities as well.      Voluntariness  In addition to the models of organization  referenced by Blau and Scott (1962), Amitai Etzioni describes three types of  organizations: 'coercive' organizations that use physical means (or threats  thereof), 'utilitarian' organizations that use material incentives, and  'normative' organizations that use symbolic awards and status. He also describes  three types of membership: 'alienative members' feel negatively towards the  organization and wish to leave, 'calculative members' weigh benefits and  limitations of belonging, and 'moral members' feel positively towards the  organization and may even sublimate their own needs in order to participate  (Etzioni 1961). As noted by Jennifer Lois (1999:118) normative  organizations are the most underrepresented type of organization discussed in  the sociological literature. Even so, Etzioni's model is sufficient such that I  define a -- voluntary -- community as a 'normative' organization of 'moral'  members. I adopt this synonymous definition not only because it allows me to  integrate the character of the members into the character of the organization,  but to echo the importance of the sense of the collaborative 'gift' in  discussions among members of the community. Yet, obviously, not all voluntary  organizations are necessarily open according to the definition above. A  voluntary community can produce proprietary products and have opaque processes --  collegiate secret societies are a silly but demonstrative example. However, like with openness, it is difficult to  draw a clear line: one cannot exclusively locate open communities and their  members strictly within the 'normative' and 'moral' categories, though they are  dominant in the open communities I introduced. Many members of those open  communities are volunteers, either because of a 'moral' inclination and/or  informal 'calculative' concern with a sense of satisfaction and reputation.  While the FLOSS survey concluded, """"that this activity still resembles rather a  hobby than salaried work"""" (Ghosh et al. 2002:67), 15.7% of their sample declared  they do receive some renumeration for developing F/OS. Even at the IETF and W3C,  where many engineers are paid to participate, it is not uncommon for some to  endeavor to maintain their membership even when not employed or their employers  change. The openness of these communities is perhaps  dominant in describing the character of the organization, though the  voluntariness is critical to understanding the moral/ideological light in which  many of the members view their participation. Conclusion  I've attempted to provide a definition for  openness that reflects an understanding of contemporary usage. The popular  connotation, and consequently the definition put forth in this essay, arises  from well known examples that include -- at least in part -- a notion of voluntary  effort. On further consideration, I believe we can identity a loose  conceptualization of shared products, and a process of transparency, integrity,  and non-discrimination. Brevity prevents me from considering variations of these  characteristics and consequent claims of 'openness' in different communities.  And such an exercise isn't necessary for my argument. A common behavior of an  open community is the self-reflexive discourse of what it means to be open on  difficult boundary cases; the test of an open community is if a constituency  that is dissatisfied with the results of such a discussion can can fork  (relocate) the work elsewhere.                        Works Cited              Blau, Peter and W. Richard Scott. Formal organizations: a comparative  approach. New York, NY: John Wiley, 1962. Etzioni, Amitai. Modern organizations. New York, NY: Free Press of  Glencoe., 1961. Ghosh, Rishab, Ruediger Glott, Bernhard Krieger, and Gregorio Robles.  Free/Libre and open source software: survey and study. 2002. http://www.infonomics.nl/FLOSS/report/   Lois, Jennifer. """"Socialization to heroism: individualism and collectivism in  a voluntary search and rescue group."""" Social Psychology Quarterly 62  (1999): 117-135. Nardi, Bonnie and Steve Whittaker. """"The place of face-to-face communication  in distributed work."""" Distributed Work. Ed. Pamela Hinds and Sara  Kiesler. Boston, Ma: MIT Press., 2002. chapter 4. Reagle, Joseph. Why the Internet is good community governance that works  well. 1999.http://cyber.law.harvard.edu/people/reagle/regulation-19990326.html   Stallman, Richard. Free Software Foundation. 1996. http://www.gnu.org/fsf/fsf.html  Stallman, Richard. Linux and the GNU project. 1997. http://www.gnu.org/gnu/linux-and-gnu.html   Stallman, Richard. The GNU project. 1998. http://www.gnu.org/gnu/thegnuproject.html   Tzouris, Menelaos. Software freedom, open software and the participant's  motivation -- a multidisciplinary study. London, UK: London School of  Economics and Political Science, 2002.                                      Citation reference for this article             MLA Style              Reagle Jr., Joseph. """"Open Content Communities."""" M/C Journal 7.3 (2004). &lt;http://www.media-culture.org.au/0406/06_Reagle.rft.php&gt;.              APA Style              Reagle Jr., J. (2004, Jul.) Open Content Communities, M/C Journal, 7(3), &lt;http://www.media-culture.org.au/0406/06_Reagle.rft.php&gt;.                                                 ","",""
"2004","How Free Became Open and Everything Else under the Sun","       Introduction       While Free Software Foundation founder Richard Stallman argues that Free Software is not Open Source, he is only half right—or only speaking about the question of motivation (the half that matters to him). The definition of Open Source, as enshrined in the Open Source Definition (OSD) is a nearly verbatim copy of the Debian Free Software Guidelines (DFSG). Both the OSD and DFSG are practical articulations of Stallman’s Free Software Definition (FSD). Open Source, with a different political and philosophical basis, can only exist because the FSD is broad enough to allow for its translation into other terms yet defined enough to allow for a directed and robust social movement. As much as Stallman might want to deemphasize Open Source, he would never change the broadly defined definition of freedom that made its existence possible.       This level of translatability within the domain of Free and Opens Source Software (FOSS) is echoed in the accessibly of its philosophies and technologies to groups from across the political spectrum. Recalibrating the broad meaning of freedom outlined in the FSD to align with their own philosophies and politics, these groups perceive FOSS as a model of openness and collaboration particularly well suited to meet their own goals. In this process of re-adoption and translation, FOSS has become the corporate poster child for capitalist technology giants like IBM, the technological and philosophical weapon of anti-corporate activists, and a practical template for a nascent movement to create an intellectual “Commons” to balance the power of capital. In these cases and others, FOSS’s broadly defined philosophy—given legal form in licenses—has acted as a pivotal point of inspiration for a diverse (and contradictory) set of alternative intellectual property instruments now available for other forms of creative work.       Iconic Tactics       As a site of technological practice, FOSS is not unique in its ability to take multiple lives and meanings. For example, Gyan Prakash (1999) in Another Reason_ _describes the way that many of the principles and practices of early twentieth century techno-science were translated, in ways similar to FOSS, during India’s colonial era. British colonizers who built bridges, trains, and hospitals pointed to their technological prowess as both a symbol of a superior scientific rationality and justification for their undemocratic presence in the subcontinent. Prakash describes the way that a cadre of Indian nationalists re-visioned the practice and philosophical approach to techno-science to justify and direct their anti-colonial national liberation movement. Techno-science, which was an instrument for colonialism and an icon for idea of progress, was nonetheless re-valued and redirected toward “another reason,” thus acting as a “tactic” productive of other social and political practices. We call this dynamic iconic tactic.       FOSS has been deployed as an iconic tactic in a wide range of projects. FOSS philosophy simply states that it is the right of every user to use, modify, and distribute computer software for any purpose. The right to use, distribute, modify and redistribute derivative versions, the so called “four freedoms,” are based in and       representative of an extreme form of anti-discrimination resistant to categorization into the typical “left, center and right” tripartite political schema. This element of non-discrimination, coupled with the broad nature of FOSS’s philosophical foundation, enables the easy adoption of FOSS technologies and facilitates its translatability.       FOSS’s broadly defined freedom acts as an important starting point and one conceptual hinge useful in understanding the promiscuous circulation of FOSS as a set of technologies, signs, methodologies and philosophies. Also helpful is an analysis of the way in which this philosophical and legal form is animated and redirected in historically particular, and at times divergent, ways through the use of FOSS technologies and licensing schemes. It is to three contrasting examples of such transmutations that we now turn to.       Translation in FOSS       With over USD 81 billion in yearly revenue deriving in no small part from the companies vast patent and copyright holdings, IBM is an example of global capitalism whose bedrock is intellectual property. With a development methodology that IBM recognizes as more agile and profitable than proprietary models in many situations, IBM was quick to embrace FOSS.       Hiring a cadre of FOSS developers to work in-house on FOSS software, IBM launched the first nationwide advertising campaign promoting the FOSS operating system GNU/Linux. In their first campaign, they highlighted the ideas of openness and freedom in ways that, unsurprisingly, reinforced their corporate goals. Featuring the recognizable Linux mascot Tux the penguin and a message of “Peace, Love, and Linux,” IBM connected using and buying FOSS-based enterprise solutions with 1960’s counter-cultural ideals of sharing, empowerment, and openness.       IBM’s engagement with FOSS is representative of a much larger corporate movement to translate FOSS principles into a neoliberal language of market agility, consumer choice, and an “improved bottom line.” While their position, as the recent SCO and IBM court cases over Linux have demonstrated, is not uniformly shared in the corporate world, IBM is a highly visible example of a larger corporate push toward Free Software as the basis of a service-based business model.       While the money behind IBM’s advertising machine makes their take on FOSS particularly visible, they hold no monopoly on the interpretation of FOSS’s meaning and importance. This is evidenced by the extensive use of FOSS as an iconic tactic by leftist activists around the world. Also bearing a three letter acronym, the Independent Media Centers (IMC) are a socio-political project whose mission and spirit are completely contrary to the goals of a large corporation like IBM. Indymedia is a worldwide collective of loosely affiliated grassroots online media websites and non-virtual spaces that allow activists to directly make, move, and “become” the media. IMCs are an important and integrated part of the anti-corporate and counter-globalization movement. In their work, IMC activists have aligned FOSS philosophy with their goals and visions for openness, media-reform, and large-scale socio-political justice.       Like IBM, IMCs use existing FOSS software and create their own tools. IMC software, is, by charter, FOSS. As a volunteer organization with limited economic resources, FOSS has been crucial in its technology-heavy operations. Beyond use for pragmatic reasons, there is widespread support and admiration for FOSS, which is often identified as a revolutionary example of mutual aid, structural openness and the power of collaboration. The following quotes from the IMC’s online-meeting where the decision to formally adopt FOSS was made exemplify activist’s understandings of how FOSS can be used as a tool to further their political aspirations.       xxxx: I assume it is safe to say that we are making this choice in order to try to choose the thing which has the least chance of benefiting any corporation, or any other form of hoarding in any way       xxxx: There is a wonderful pool of very well-developed free software out there. Earlier, someone said that IMC is a revolutionary project, and free software is a revolutionary tool for it. I stan[d] very firmly behind using free software first       These activists—and others in the IMC and anti-corporate, anti-capitalist, and counter-globalization movements—find inspiration in FOSS as proof of the possibility of successful alternatives to capitalist forms of production.       In recent years, a political position—with a centrist political philosophy distinct from both capitalists like IBM and anti-capitalists like the IMC—has emerged with FOSS as its primary point of philosophical justification. This group is constituted by a growing number of North American and European scholars who have employed the metaphor of a “Commons” to argue for legally protected resources and knowledge for common use by all. The commons endeavor is one example of a larger “liberal” critique of the neoliberal face of “socially destructive unfettered capitalism” which is seen as a threat to democracy (Soros 2001). The information commons movement, largely spearheaded by Lawrence Lessig (1999; 2001; Creative Commons) and David Bollier (2002; Public Knowledge), explicitly points to FOSS as its inspiration. Within the Commons movement, FOSS has been tactically held up as proof that Commons are achievable and as a model of the process through which they can be created; the Creative Commons organization, a key institution within the Commons movement, has adopted FOSS-style licensing to foster and protect other other kinds of non-technical knowledge.       Conclusion       These three cases, which don’t exhaust the examples of translation, demonstrate how FOSS functions as an iconic tactic for a range of projects, which is not the simple result of the lexical ambiguity of the words free or open. The ability of FOSS to act as an “engine of translation” is one of the most compelling political aspects of FOSS and an important starting point in the assessment of the variable ways in which FOSS has been used as a set of technologies and an icon for openness—one we feel is often overlooked or obscured in popular and scholarly accounts on the broader implications of FOSS.       The terms openness and freedom are often the key categories by which advocates, activists, journalists, and scholars approach the social and political implications of FOSS. While some accounts attribute a type of radical political intention to the domain of FOSS, others critique FOSS as indicative of late-capitalism’s drive to create and exploit free labor (Terranova 2000). Some problematically collapse the efforts of Lessig and Creative Commons with those of FOSS (Boyton 2004) obscuring some of the important differences between the goals and licenses of the groups.       Certainly, the way in which FOSS is translated also shifts the ways that FOSS developers understand their own actions and motivations. However, commentators often interpret isolated cases of this process of inspiration, adoption, and re-valuation as indicative of the whole. In this early stage of research into FOSS, it behooves us to be wary of wholesale pronouncements on the social, political, and economic nature of FOSS. We should instead remain mindful of the range of socio-historical processes by which FOSS has enabled a diversity of ideas and practices of opennesses. We should be open to the idea that an analysis of the interplay between FOSS philosophy and practices as it travels through multiple social, economic and political terrains may reveal more than (first) meets the eye.       About the Authors       Biella Coleman is a cultural anthropologist from the University of Chicago currently writing her dissertation on the ethical dynamics and political implications of the Free and Open Source movement. She spent nearly three years doing research on the Debian project and studying hacker and technology activism in the Bay Area. Her next project draws from this research to investigate the use of expressive and human rights among psychiatric survivors as a political vector to make claims against forced treatment and to halt the global exportation of an American model of psychiatry.       email: egcolema@uchicago.edu and biella@healthhacker.org       Benjamin """"Mako"""" Hill is a Free and Open Source Software developer and advocate. He is a director of Software in the Public Interest and a member of the Debian project—by most accounts the single largest Free Software project. In addition to volunteer and professional Free Software work, Hill writes and speaks extensively on issues of free software, intellectual property, collaboration, and technology.       email: mako@bork.hampshire.edu                Works Cited          Boynton, Robert. ”The Tyranny of Copyright.”New York Times Magazine             http://www.nytimes.com/2004/01/25/magazine/25COPYRIGHT.html           Bollier, David. Silent Theft: the Private Plunder of our Common Wealth. New York: Routledge, 2002.           Lessig, Lawrence. Code and Other Laws of Cyberspace. New York: Basic Books, 1999.           .The Future of ideas. New York: Random House, 2001.           Prakash, Gyan. Another Reason: Science and the Imagination of Modern India. Princeton, NJ: Princeton University Press, 1999.           Soros, George. Open Society: Reforming Global Capitalism. New York: Public Affairs, 2000.           Terranova, Tiziana. “Free Labor: Producing Culture for the Global Economy.” Social Text. (18): 2: 33-57, 2000.           Warner, Michael. Publics and Counterpublics. New York: Zone Books, 2002.          Weblinks:          http://www.gnu.org/philosophy/free-sw.html         http://www.debian.org/social_contract.html#guidelines,         http://www.opensource.org/docs/definition.php         http://www.slweekly.com/editorial/2004/feat_2004-01-22.cfm         http://www.indymedia.org         http://creativecommons.org/         http://www.publicknowledge.org/                          Citation reference for this article         MLA Style          Coleman, Biella &amp; Hill, Mako. """"How Free Became Open and Everything Else Under the Sun"""" M/C: A Journal of Media and Culture &lt;http://www.media-culture.org.au/0406/02_Coleman-Hill.php&gt;.          APA Style          Coleman, B. &amp; Hill, M. (2004, Jul1). How Free Became Open and Everything Else Under the Sun. M/C: A Journal of Media and Culture, 7, &lt;http://www.media-culture.org.au/0406/02_Coleman-Hill.php&gt;               ","",""
"2004","Editing and the Crisis of Open Source","                           The Free Software movement that began in 1985 and the newer “open source” movement, represented a serious threat to traditional methods of production and distribution. The idea of a non-proprietary method of cultural exchange was and is a radical departure from traditional models that have come to restrict creativity and free exchange. In the ensuing years, there was a gradual drift away from ideas of non-proprietary toward ideas of access to software’s code level. This mirrored an evident diffusion of these “open” ideas into the cultural sphere. Open publishing, open editing, open music, and open culture are now hip buzzwords that point toward a new cultural formation based on a more free exchange of ideas. But contrary to the grand proclamations of some, what we are witnessing is the capture and transformation of elements threatening to capitalism, and a repackaging of open source concepts to be useful in a new flexible labor environment.           One of the fundamental issues at stake in the open source debate is ownership of the text. There are media projects currently at work that completely destabilize concepts of ownership and copyright, projects that have the chance to point toward an altogether new, non-proprietary future. Indymedia.org was one of the forerunners of open publishing, a method by which readers could upload an article and contribute to any article’s meaning by appending comments directly afterwards. One step forward in this trend is the creation of the Wiki; those message boards with a funny name that allow users to actually re-create the text in question, functioning as author/editors with or without authority. The consequences for traditional ideas of textual editing are startling.           There is a distinct division between Free Software and open source, as the latter was created to clear up the confusions of the former concept “free.” “Free” was confused with zero-cost, and was initially intended as “free speech, not free beer” to quote an oft-repeated phrase. Wikipedia.org, an open source encyclopedia, describes this conflict of terms.           It was hoped that the usage of the newer term “open source” would eliminate such ambiguity, and would also be easier to “market” to business users (who might mistakenly associate “free software” with anti-commericalism). Since its introduction, however, the “open source” label has been criticized for fostering an ambiguity of a different kind: that of confusing it for mere availability of the source, rather than the freedom to use, modify, and redistribute it.           One of the early defects of “free” software was the perceived inability to use it in for-profit ventures. Whereas the Free Software movement thinks of the freedom of software’s code to be available to all as an ethical and social imperative, open source treats it as a practical issue. Both GPL and open source licenses can be used in for-profit ventures. “Copylefted” material must remain “free” for people to modify, but can be priced for people to buy           With the advent of the term open source, it now appears that everything is open source, or is at least sold that way. When not applied to programming, “open content” is used to describe a wide range of activities that have nothing to do with computer software. There is still the problem of terminology, however. People seem to have fuzzy conceptions of what exactly open content/open source means. One organization I worked with asked something to the effect of “if I provide free .pdf downloads, is that open source?” Still another seemed to think that having a Web site amounted to “being open source.” Of course neither of these examples represent true open content, since the underlying material cannot be further modified, only distributed. Perhaps it is the nature of buzzwords to be confusing to their users. The confusion surrounding the terms open source/open content, however, could be necessary to provide the means by which capital can organize around the term, creating new business practices incorporating open content when it suits them, fiercely defending their Copyright when necessary.           Wired recently published an article entitled “Open Source Everything,” in which Thomas Goetz tries to overturn long held beliefs about open source, one being its (justified) anti-capital bent.           open source is often framed as an attack on the corporate world at large. But in fact the open source approach can be a boon for companies. Licensing from a trusted collaborative project saves money and leaves the technology open to further development.           The article actually outlines different models that people are developing to fuse open source ideas into high capital-generating projects. One model is Wikipedia, an open source encyclopedia invented by Jimmy Wales in 2001. In 2003, Wikipedia has “surpassed Brittannica.com in daily hits” and allows users/editors to “apply their professional knowledge to a broader audience, pro-bono style.” Wikipedia also demonstrates the dilemma of open source initiatives like it: what happens when one wants to organize a product, perhaps even one to create revenue?           Next year, he [Wales] hopes to release Wikipedia 1.0, a peer-reviewed and peer-edited compendium of 75,000 entries, available to anyone, for commercial or noncommercial purposes. He’s even considered pulling a Red Hat—releasing an affordable paid version—before anybody else does.           The question of who would capitalize on such a thing is left in doubt, a sign that doesn’t bode well for those who helped produce it. As Wales says,                        [I]t costs Britannica money to pay people to write articles; it costs to edit them. Those are all things we do for free. So how can they compete? Our cost model is just better than theirs.             It is a better business model for certain because labor is free, the capitalist’s one wet dream.                      Perhaps not so curiously, the issue of labor is rarely discussed in the context of open source. When marketing to potential business users, one doesn’t trouble with pesky notions like exploitation. As businesses would like to outsource/open source their stagnant projects, they also want to capitalize on the creativity of a transnational, all-volunteer labor force. Why are there virtually no open source/open content organizations that seek to financially reward the efforts of their producers? Open content producers are certainly more numerous than its distributors. The dirty secret of open source is that while they made the openness of code and content more desirable to the business community, the same ingenuity has not been shown in the desire to create paid laborers. Perfect for a more flexible workforce, the volunteer is paid in “experience,” and “name recognition,” neither of which translates into any sort of income. The current wild-west nature of open source allows a very liberating idea to become a capitalist paradise: many people working on a project for essentially nothing and a concurrent ability to profit on that labor at some later date.           In case we were wondering how this new world of open source effects traditional worker/employer relations, the Wired article assures us that “[w]ith open source, the people are back in charge. Through distributed collaboration, a multitude of workers can tackle a problem all at once.” What the Wired article elides is the power differential between content providers and those who actually or potentially “own” the project. It creates a completely false idea of empowerment for “the people” which has nothing to do with actually reaping financial benefits from their labor .           Editing usually involves (for the sake of simplification) a writer and an editor, each playing a role with the text as the product under the microscope. The writer/editor relationship is something sacred in the field of publishing, since this is one of the only contacts expansive publishing houses have with their content providers. Textual editing is based on the authority of an editor and a confidence in their ability to navigate a text, applying the rules of grammar and style. As an opposing model of production, open-edited wikis suggest that when it comes to clarity and content, a large number of readers can decide what is best between them, and need not be subjected to the decisions of a small editorial team. Notions of ownership over the text become a moot point when unknown authors from all over the world are constantly reworking a single text.           The dangers of the open source crisis is that all current volunteered work will be debased to the point of becoming a new labor initiative of a global information industry. It could easily become the newest in a long line of strategies for capitalism to renew itself. Any desire to contribute to a community or to an organization developing radically new ways of conceiving cultural transmission will be squashed. Mega-conglomerate companies would both buy off talented open source/open content volunteers and outsource stagnant sectors to open source collectives, intending to reap benefits from later discoveries. But this does not necessarily have to happen, and there are possibilities being discussed (Matthew Arnison’s vision of Indymedia’s possible open editing future, for instance) for open content to radically undermine the current hyper-controlled domain of copyright. Under this non-business model, we could see texts that were produced by small, non-corporate, independent groups attaining the reputability they deserve by becoming even more open than ever, and by allowing the distinction between audience and creator to all but disappear.                        Works Cited              http://www.physics.usyd.edu.au/~matthewa/catk/openpub.php&gt;. “Open Source.” Wikipedia: The Free Encyclopedia. 27 Apr. 2004. 30 Apr. 2004.               http://en.wikipedia.org/w/wiki.phtml?title=Open_source&amp;printable=yes&gt;. “Open Content.” Wikipedia: The Free Encyclopedia. 26 Apr. 2004. 30 Apr. 2004.               http://en.wikipedia.org/w/wiki.phtml?title=Open_content&amp;printable=yes&gt;.                 http://en.wikipedia.org/w/wiki.phtml?title=Open_source_movement&amp;printable=yes&gt;. “Copyleft.” Wikipedia: The Free Encyclopedia. 27 Apr. 2004. 30 Apr. 2004.               http://en.wikipedia.org/w/wiki.phtml?title=Copyleft&amp;printable=yes&gt;.                 http://www.wired.com/wired/archive/11.11/opensource.php&gt;.                                      Citation reference for this article             MLA Style              Thake, William. """"Editing and the Crisis of Open Source"""" M/C: A Journal of Media and Culture &lt;http://www.media-culture.org.au/0406/04_Thake.php&gt;.              APA Style              Thake, W. (2004, Jul1). Editing and the Crisis of Open Source. M/C: A Journal of Media and Culture, 7, &lt;http://www.media-culture.org.au/0406/04_Thake.php&gt;                                                 ","",""
"2004","Evolution of Open Source Networks in Industry","The open source software movement has become a threat to corporate software development. In response, companies started to develop products and services related to open source software. Subsequently, they also tried to come to terms with the processes that are characteristic of open source software development. This article examines the efforts made by companies to use open source principles and practices for corporate purposes. The study shows that over time the open source-inspired networks developed by these companies gradually come to resemble classical corporate networks.","",""
"2004","Free software: Some Brazilian translations"," We examine two histories in this paper. First, we briefly look at a North American history, in which we look at the relationship of free software with the founding principles of democracy. Second, we examine recent Brazilian history, especially the most policy decision to adopt free software, affirming technological autonomy. Democratic ideals, defended by the free software movement, are transformed in Brazilian politics, leading both to further free software development and a stronger democracy.  ","",""
"2004","A case for Indian insourcing: Open Source interest in IT job expansion"," The controversy surrounding the """"off–shoring"""" of IT jobs from the United States to other countries, in particular to India, has become a focal point in American political discourse and has been widely represented in the media. Disturbingly, little attention has been paid to this occurrence beyond its implications for American employment opportunities. Representing Indian and American IT workers as unified groups whose interests are mutually exclusive and opposed to one another is problematic given the material realities that propel """"outsourcing."""" Among the potential benefits of growing demand for, and supply of, skilled IT workers is increased participation in the Open Source Software (OSS) movement. Expanding global involvement offers a significant opportunity for developing countries to influence the direction, importance, and future of OSS. ","",""
"2004","FLOSS developers as a social formation"," Developers of Free/Libre and Open Source Software (FLOSS) are often referred to as a community or as a scene. But so far this seems mostly just a rough expression. This paper takes a closer look at FLOSS developers and their projects to find out how they work, what holds them together and how they interact. Community and social movement seem not to apply as descriptors. Looking at norms, values, structures, and conflict resolution, a hacker subculture appears which is compartmentalised into differently organised projects. By testing empirical findings against various theoretical approaches, ideas for further research are identified.  ","",""
"2004","Opening the sources of accountability"," This paper scrutinizes the concept of accountability in light of free and open source software. On the view that increasing accountability grants value to society by motivating those most likely and able to prevent risk and harm to do so, I argue that while developing software collaboratively, licensing it openly, and distributing its source code freely are promising first steps in the long journey to rehabilitate accountability in our highly computerized society, our very understanding of what accountability is changes too. This paper analyzes the concept of accountability in an open environment and explores the implications in two mission–critical application fields in which software plays a significant role — electronic voting, and electronic medical records. It further considers the potential remedies to accountability’s erosion that free and open source software offer, and the ways in which accountability can be generalized to collective action if we understand it less as punishability and more as a culture that encourages the prevention of risk and harm. With such reconceptualized accountability in mind, I find that code visibility, a self–imposed standard of care and sensible licensing arrangements, are a potent, practical, and effective alternative to the strict liability standards offered as a solution to the accountability problem by earlier scholars.  ","",""
"2004","The economics of open source hijacking and the declining quality of digital information resources: A case for copyleft","The economics of information goods suggest the need for institutional intervention to address the problem of revenue extraction from investments in resources characterized by high fixed costs of production and low marginal costs of reproduction and distribution. Solutions to the appropriation issue, such as copyright, are supposed to guarantee an incentive for innovative activities at the price of few vices marring their rationale. In the case of digital information resources, apart from conventional inefficiencies, copyright shows an extra vice since it might be used perversely as a tool to hijack and privatise collectively provided open source and open content knowledge assemblages. Whilst the impact of hijacking on open source software development may be uncertain or uneven, some risks are clear in the case of open content works. The paper presents some evidence of malicious effects of hijacking in the Internet search market by discussing the case of The Open Directory Project. Furthermore, it calls for a wider use of novel institutional remedies such as copyleft and Creative Commons licensing, built upon the paradigm of copyright customisation.","",""
"2004","Fundamental issues with open source software development","Despite the growing success of the Open Source movement, most of the general public continues to feel that Open Source software is inaccessible to them. This paper discusses five fundamental problems with the current Open Source software development trend, explores why these issues are holding the movement back, and offers solutions that might help overcome these problems. The lack of focus on user interface design causes users to prefer proprietary software’s more intuitive interface. Open Source software tends to lack the complete and accessible documentation that retains users. Developers focus on features in their software, rather than ensuring that they have a solid core. Open Source programmers also tend to program with themselves as an intended audience, rather than the general public. Lastly, there is a widely known stubbornness by Open Source programmers in refusing to learn from what lessons proprietary software has to offer. If Open Source software wishes to become widely used and embraced by the general public, all five of these issues will have to be overcome.","",""
"2004","Reducing transaction costs in information infrastructures using FLOSS"," Firms, or more generally, organizations, develop and become larger along time, using more and more computers to work. This growth in the number of computers leads to a growth of software use (operating systems and their applications, for example) and, as a result, to the growth in the number of software use/access licenses to be purchased and managed. For the owners of software intellectual property rights, this process leads to a greater supervision of users to regulate lawful access to software.  The situation occurs when all of the software used by an organization is proprietary. This results in some costs — transaction costs — that are not usually taken into account by administrators and managers. What happens if FLOSS is used? We will show that this choice leads to a reduction in transaction costs in terms of computation costs and in terms of the number of managed contracts, which can be numerically reduced by half.  ","",""
"2004","Seeking an educational commons: The promise of open source development models","Schools hindered by cost and flexibility problems when trying to obtain resources such as software and textbooks may find answers in open source development processes.","",""
"2004","The realities of Free/Libre/Open Source Software developers in Japan and Asia"," A variety of individuals around the world are furthering development of Free/Libre/Open Source Software (FLOSS) through the Internet. Why do they participate in developers’ communities and continue to develop FLOSS? Is their treatment enough to sustain their activities? Surveys, using online questionnaires, were conducted to answer these questions to analyze the FLOSS movement sociologically. However these surveys tend to focus on developers in the West. We decided to see if there are regional differences in FLOSS development. To that end, we conducted two surveys, the FLOSS–JP survey in Japanese and the FLOSS–ASIA survey in other Asian languages. In this paper, we describe regional differences, especially among Asian and Japanese FLOSS developers and compare the results to those from Western FLOSS surveys. Detailed reports of FLOSS–JP/ASIA are available at our Web site (MRI, 2004) ","",""
"2004","Release criteria for the Linux kernel","Before software is released to its users, software developers will ensure that the software has met specified functional and technical requirements and that it is as free from bugs as possible. Users should be able to have a high degree of confidence that the software will perform as specified and without fault. With open source development practices such as those employed on the Linux kernel project, there are no detailed specifications and little formal testing processes. The questions, then, are what criteria, if any, are used in determining the suitability for release of a particular version of this software, and do users have any degree of confidence in the quality of that release of software? These questions were examined in this study using information from the Linux Kernel Mailing List (LKML), the primary forum for discussion of development issues of the Linux kernel, and change logs submitted with version releases of the Linux kernel. It was determined that very little planning is employed in determining the release of a particular version of the software and that a version of the software is essentially a collection of source patches released at regular intervals with some stabilisation of the code base before each release. Very little attempt is made to verify that the code is bug free, and consequently, the code released is of a largely unknown level of quality. End users are left to decide for themselves the suitability and robustness of a particular version of the software.","",""
"2004","Altruistic individuals, selfish firms? The structure of motivation in Open Source software","","",""
"2004","Open access to law in developing countries","Securing a widespread and, whenever possible, free, access to legal information has become important everywhere. Open access has higher stakes in developing countries where access to law is often difficult. In this particular context, free access to statutes and case law could significantly contribute to a better establishment of the rule of law and an overall consolidation of national legal institutions.  Never before have better conditions existed for a wider circulation of law. The Internet and related technologies have dramatically revolutionized the possibilities of cheaply providing high–quality, low–cost access to national legal documentation. In this article, elements of a strategy aimed at developing open access to law in developing countries are put forth.","",""
"2004","Factors affecting the use of open source software in tertiary education institutions","Open Source Software (OSS) is software that has been released under a license which requires the distribution of the software’s source code with any binaries. It is often available at no cost and is mostly supported by developers providing their services for free. Considerable interest has been shown in OSS by tertiary education institutions (TEIs) because of the promise of a reduced total cost of ownership of the software, potentially better support, freedom from vendor lock–in, ability to tailor the software and pedagogic benefits of being able to view the source code. To find out the extent of use of OSS by TEIs in Australia, New Zealand and the United Kingdom, a survey was sent out to technical personnel at all TEIs in these countries. The results of the survey show that OSS is already being used by all TEIs who responded to the survey and that the major reasons for this was lower Total Cost of Ownership and freedom from software vendor dependence. It is clear however that the majority of the OSS software being used is in server infrastructure with a lesser amount being used on normal desktop machines.","",""
"2004","Contextualising knowledge–making in Linux user groups"," A common critique on free/libre open source software (FLOSS) is that FLOSS–oriented products, often mutated from or based on parallel works, are not really innovative. FLOSS’ development process and subsequent products (e.g. software packages, maintaining services, or the formation of user groups, etc.) definitely denote a kind of innovation driving our world towards a knowledge–based society. This perspective challenges the conventional notion of innovation in technological and economic arenas from a glocalised perspective. I argue that software development is not solely a matter of technical engineering or economic progress. Rather, it also involves cultural, social and political factors.  Through interaction and negotiation, FLOSS innovation is embedded in the translation of problems and knowledge–sharing between user and designer, and between lay and expert. Narratives of Linux users groups (LUGs) show that the influence of local knowledge and tacit skills is very much in evidence in the FLOSS innovation system. Practices in LUGs denote the codification of local knowledge and its translation into more formalised and sophisticated expertise. This raises fundamental questions about whether institutional involvement should continue along its techno–economic route of relying entirely on specialists (programmers) to reach developmental decisions, or whether the process should be made more democratic by allowing a broader range of social interests to have some input into software development.  In this paper, I demonstrate the values of local tinkering, soft skills and tacit knowledge in FLOSS innovation. I investigate how locally defined software problems and locally crafted solutions towards the problems are codified and translated into expert knowledge within FLOSS innovation through intense hands–on practices and ongoing debate. The process of translating local knowledge into formal expertise is analysed in light of data collected from the York Linux User Group (YLUG). While FLOSS is gaining unprecedented recognition at an accelerating pace, and more institutional resources are made available, noticeably from national agencies and industry, it is crucial to get a genuine picture of FLOSS development, on which this paper will shed some light.  ","",""
"2004","SDP-city against a vicious circle!","This paper characterizes the software development craft’s vicious circle and proposes the first steps required to get out of it. As long as future software developers have no exemplary software (with patterns, design, and documentation) to study, the present software developers will not produce exemplary software. To overcome this, the first step is to make exemplary software widely available, and help developers to produce them. Despite most open source software being accessible, finding exemplary and qualified work is hard.  A software city is proposed for teaching and learning purposes, where (1) all works are open; (2) there is a pattern repository with the most important building elements and principles; (3) the patterns are underpinned by concrete, complete, running and documented examples (Software Development Pack or SDP); and, (4) experts help builders, and qualify the works. Only quality works are easy to use and easy to reuse. Let’s build an SDP-city where, besides cathedrals and bazaars, you can also find a city hall, schools, and exhibitions!","",""
"2004","Evolution of the Linux Credits file: Methodological challenges and reference data for Open Source research","This paper presents time–series data that can be extracted from the Linux Credits files and discusses methodological challenges of automatic extraction of research data from open source files. The extracted data is used to describe the geographical expansion of the core Linux developer community. The paper also comments on attempts to use the Linux Credits data to derive policy recommendations for open source software.","",""
"2005","The future of sociology of FLOSS","The following commentary is part of First Monday's Special Issue #2: Open Source.  This paper briefly summarises the current research on the free/libre open source software (FLOSS) communities and discusses the deficiency of a body of FLOSS research done from the sociological perspective. Since Eric Raymond's famous 'Cathedral and Bazaar' that depicts a harmoniously cooperative community/bazaar that engages 'hackers' to develop and advocate FLOSS, many other successors have adopted a similar utopian-like perspective to understand the FLOSS development and organisation processes within and across communities. However, I argue that such a view, partially valid in explaining the FLOSS development, not only ignores the diversity of population and their different articulations, interpretation on and performances towards developing FLOSS, but also neglects the different environments and contexts where FLOSS is deployed, developed and implemented. A sociological point of view is vital in that it helps understand the dynamics emerging from the heterogeneity of the FLOSS social world and allows us to see different roles played by diverse actors and various environments and contexts where FLOSS evolves differently. This paper concludes with a list of suggested research topics for future studies.","",""
"2005","The social structure of free and open source software development"," Metaphors, such as the Cathedral and Bazaar, used to describe the organization of FLOSS projects typically place them in sharp contrast to proprietary development by emphasizing FLOSS’s distinctive social and communications structures. But what do we really know about the communication patterns of FLOSS projects? How generalizable are the projects that have been studied? Is there consistency across FLOSS projects? Questioning the assumption of distinctiveness is important because practitioner–advocates from within the FLOSS community rely on features of social structure to describe and account for some of the advantages of FLOSS production.  To address this question, we examined 120 project teams from SourceForge, representing a wide range of FLOSS project types, for their communications centralization as revealed in the interactions in the bug tracking system. We found that FLOSS development teams vary widely in their communications centralization, from projects completely centered on one developer to projects that are highly decentralized and exhibit a distributed pattern of conversation between developers and active users.  We suggest, therefore, that it is wrong to assume that FLOSS projects are distinguished by a particular social structure merely because they are FLOSS. Our findings suggest that FLOSS projects might have to work hard to achieve the expected development advantages which have been assumed to flow from """"going open."""" In addition, the variation in communications structure across projects means that communications centralization is useful for comparisons between FLOSS teams. We found that larger FLOSS teams tend to have more decentralized communication patterns, a finding that suggests interesting avenues for further research examining, for example, the relationship between communications structure and code modularity.  ","",""
"2005","Evolution of the Linux Credits file: Methodological challenges and reference data for Open Source research (originally published in Volume 9, Number 6, June 2004)","This paper presents time–series data that can be extracted from the Linux Credits files and discusses methodological challenges of automatic extraction of research data from open source files. The extracted data is used to describe the geographical expansion of the core Linux developer community. The paper also comments on attempts to use the Linux Credits data to derive policy recommendations for open source software.","",""
"2005","Code, culture and cash: The fading altruism of open source development (originally published in Volume 6, Number 12, December 2001)","The nexus of open source development appears to have shifted to Europe over the last ten years. This paper explains why this trend undermines cultural arguments about """"hacker ethics"""" and """"post-scarcity"""" gift economies. It suggests that classical economic theory offers a more succinct explanation for the peculiar international distribution of open source development: hacking rises and falls inversely to its opportunity cost. This finding throws doubt on the Schumpeterian assumption that the efficiency of industrial systems can be measured without reference to the social institutions that bind them.","",""
"2005","FM Interviews: Interview with Linus Torvalds: What motivates software developers (originally published in Volume 3, Number 3, March 1998)","None Available","",""
"2005","Future research on FLOSS development","The following commentary is part of First Monday's Special Issue #2: Open Source.","",""
"2005","Reflections on free software past and future","The following commentary is part of First Monday's Special Issue #2: Open Source.","",""
"2005","Theres no such thing as free software (And its a good thing, too)","The following commentary is part of First Monday's Special Issue #2: Open Source.","",""
"2005","The social structure of free and open source software development (originally published in Volume 10, Number 2, February 2005)","Metaphors, such as the Cathedral and Bazaar, used to describe the organization of FLOSS projects typically place them in sharp contrast to proprietary development by emphasizing FLOSS’s distinctive social and communications structures. But what do we really know about the communication patterns of FLOSS projects? How generalizable are the projects that have been studied? Is there consistency across FLOSS projects? Questioning the assumption of distinctiveness is important because practitioner–advocates from within the FLOSS community rely on features of social structure to describe and account for some of the advantages of FLOSS production.  To address this question, we examined 120 project teams from SourceForge, representing a wide range of FLOSS project types, for their communications centralization as revealed in the interactions in the bug tracking system. We found that FLOSS development teams vary widely in their communications centralization, from projects completely centered on one developer to projects that are highly decentralized and exhibit a distributed pattern of conversation between developers and active users.  We suggest, therefore, that it is wrong to assume that FLOSS projects are distinguished by a particular social structure merely because they are FLOSS. Our findings suggest that FLOSS projects might have to work hard to achieve the expected development advantages which have been assumed to flow from """"going open."""" In addition, the variation in communications structure across projects means that communications centralization is useful for comparisons between FLOSS teams. We found that larger FLOSS teams tend to have more decentralized communication patterns, a finding that suggests interesting avenues for further research examining, for example, the relationship between communications structure and code modularity.","",""
"2005","The penguin in peril: SCO’s legal threats to Linux"," This thesis reviews the novel licences employed by open source developers. The paper examines how the success of the open source Linux operating system has led to conflict with traditional closed source software firms through the case study of SCO v. IBM, currently before the United States Federal District Court. Apart from exposing weaknesses in open source licensing, the case highlights the need to consider the intellectual property laws governing inputs into software development. The thesis further explores future intellectual property legislation that may forestall open collaboration. It is argued that proponents of such development methods must engage in policy discussions to limit the exclusionary authority of intellectual property licensors, by ensuring broad user rights to protected works.  ","",""
"2005","Diffusion pattern of Linux: An assessment on major technology dimensions"," This paper attempts to gain an understanding of the diffusion dynamics of Linux by assessing it on Rogers’ technology dimensions — relative advantage, compatibility, complexity, observability, and trialability. The analysis makes clear that Linux possesses greater relative advantage than its proprietary competitors because of its low cost, lower susceptibility to bugs and crashes, resilience to obsolescence, ability to run on older machines and higher perceived security. Linux is facing compatibility problems with applications, hardware and other corporate resources; suppliers’ and customers’ technologies; and, skills of current and potential employees. Extreme configurability and user unfriendly interface; limited support and staff knowledge; and, potential hazard of forking into competing versions have been some major sources of Linux’s complexity. Linux seems to have a reasonably good performance on observability and trialability dimensions. The paper concludes by offering some suggestions on how to accelerate the diffusion of Linux among software developers, national governments and international agencies.  ","",""
"2005","The emerging economic paradigm of Open Source","The following commentary is part of First Monday's Special Issue #2: Open Source.  Open Source developers have, perhaps without conscious intent, created a new and surprisingly successful economic paradigm for the production of software. Examining that paradigm can answer a number of important questions.  It's not immediately obvious how Open Source [1] works economically. Probably the worst consequence of this lack of understanding is that many people don't understand how Open Source could be economically sustainable, and some may even feel that its potential negative effect upon the proprietary software industry is an overall economic detriment. Fortunately, if you look more deeply into the economic function of software in general, it's easy to establish that Open Source is both sustainable and of tremendous benefit to the overall economy.  Open Source can be explained entirely within the context of conventional open-market economics. Indeed, it turns out that it has much stronger ties to the phenomenon of capitalism than you may have appreciated.","",""
"2005","The Cathedral and the Bazaar (originally published in Volume 3, Number 3, March 1998)","I anatomize a successful open-source project, fetchmail, that was run as a deliberate test of some surprising theories about software engineering suggested by the history of Linux. I discuss these theories in terms of two fundamentally different development styles, the """"cathedral"""" model of most of the commercial world versus the """"bazaar"""" model of the Linux world. I show that these models derive from opposing assumptions about the nature of the software-debugging task. I then make a sustained argument from the Linux experience for the proposition that """"Given enough eyeballs, all bugs are shallow"""", suggest productive analogies with other self-correcting systems of selfish agents, and conclude with some exploration of the implications of this insight for the future of software.","",""
"2005","Homesteading the Noosphere (originally published in Volume 3, Number 10, October 1998)","After observing a contradiction between the 'official' ideology defined by open-source licenses and the actual behavior of hackers, we examine the actual customs which regulate the ownership and control of open-source software. We discover that they imply an underlying theory of property rights homologous to the Lockean theory of land tenure. We relate that to an analysis of the hacker culture as a 'gift culture' in which participants compete for prestige by giving time, energy, and creativity away. We then examine the implications of this analysis for conflict resolution in the culture, and develop some prescriptive implications.","",""
"2005","The usability of open source software (originally published in Volume 8, Number 1, January 2003)","Open source communities have successfully developed a great deal of software although most computer users only use proprietary applications. The usability of open source software is often regarded as one reason for this limited distribution. In this paper we review the existing evidence of the usability of open source software and discuss how the characteristics of open source development influence usability. We describe how existing human-computer interaction techniques can be used to leverage distributed networked communities, of developers and users, to address issues of usability.","",""
"2005","Essence of distributed work: The case of the Linux kernel (originally published in Volume 5, Number 11, November 2000)","This paper provides a historical account of how the Linux operating system kernel was developed from three different perspectives. Each focuses on different critical factors in its success at the individual, group, and community levels. The technical and management decisions of Linus Torvalds the individual were critical in laying the groundwork for a collaborative software development project that has lasted almost a decade. The contributions of volunteer programmers distributed worldwide enabled the development of an operating system on the par with proprietary operating systems. The Linux electronic community was the organizing structure that coordinated the efforts of the individual programmers. The paper concludes by summarizing the factors important in the successful distributed development of the Linux kernel, and the implications for organizationally managed distributed work arrangements.","",""
"2005","Intrinsic vs. extrinsic incentives in profit–oriented firms supplying Open Source products and services"," This paper contributes to the literature on Open Source (OS) software by providing empirical evidence on the incentives of firms that engage in OS activities. Data collected by a survey conducted on 146 Italian companies supplying OS solutions (Open Source firms) show that (surprisingly) intrinsic, community–based incentives do play a role but are not, in general, put into practise. We investigate this discrepancy between attitudes and behaviours and single out groups of firms adopting more consistent behaviours. Our results are in line with the literature on business models of the firms that enter the Open Source field.   ","",""
"2005","The unacknowledged convergence of open source, open access, and open science"," A number of open initiatives are actively resisting the extension of intellectual property rights. Among these developments, three prominent instances — open source software, open access to research and scholarship, and open science — share not only a commitment to the unrestricted exchange of information and ideas, but economic principles based on (1) the efficacy of free software and research; (2) the reputation–building afforded by public access and patronage; and, (3) the emergence of a free–or–subscribe access model. Still, with this much in common, the strong sense of convergence among these open initiatives has yet to be fully realized, to the detriment of the larger, common issue. By drawing on David’s (2004; 2003; 2000; 1998) economic work on open science and Weber’s (2004) analysis of open source, this paper seeks to make that convergence all the more apparent, as well as worth pursuing, by those interested in furthering this alternative approach, which would treat intellectual properties as public goods.  ","",""
"2005","Free software and open source: The freedom debate and its consequences"," Recently the University of Göteborg held an online course in the theory and philosophy of free software and open source. During this course a lively discussion on terminology took place, in particular the concept of freedom was discussed. Without arriving at particular conclusions the posts included views in part on the lack of user awareness on what was property within the computer, on the difference between free, gratis, and libre in different languages and cultures and the need for both a common terminology and infrastructure. This paper is not an attempt to resolve these issues but to bring these questions to the attention of a wider audience in the hope that the discussion will continue.  To most outsiders the ethics of software is not something usually considered. To most proficient computer users with a passing interest in this question the ethics of software is recognised as one of the fundamental questions in the digital rights area. To most of the latter, terms such as free software, open source, and their derivatives (FLOSS, FOSS, Software Freedom) are interchangeable. Choosing one over the other is a matter of taste rather than politics. However, to most insiders the question is not one of taste. There is a fundamental difference between the two areas even if they share a similar root. Free software is not the same as open source. The two groups differ in their fundamental philosophical approach to software and its importance to society as a whole. This paper examines the two groups’ differing philosophies and explores how their actions have affected software development, access to fundamental software infrastructure, and the development of the concept of freedom.  ","",""
"2005","Cave or community? An empirical examination of 100 mature open source projects (originally published in Volume 7, Number 6, June 2002)","Starting with Eric Raymond's groundbreaking work, """"The Cathedral and the Bazaar"""", open-source software (OSS) has commonly been regarded as work produced by a community of developers. Yet, given the nature of software programs, one also hears of developers with no lives that work very hard to achieve great product results. In this paper, I sought empirical evidence that would help us understand which is more common - the cave (i.e., lone producer) or the community. Based on a study of the top 100 mature products on Sourceforge, I find a few surprising things. First, most OSS programs are developed by individuals, rather than communities. The median number of developers in the 100 projects I looked at was 4 and the mode was 1 - numbers much lower than previous numbers reported for highly successful projects! Second, most OSS programs do not generate a lot of discussion. Third, products with more developers tend to be viewed and downloaded more often. Fourth, the number of developers associated with a project was positively correlated to the age of the project. Fifth, the larger the project, the smaller the percent of project administrators.","",""
"2005","What did we learn from open source?","The following commentary is part of First Monday's Special Issue #2: Open Source.","",""
"2005","Linux: A bazaar at the edge of chaos (originally published in Volume 5, Number 3, March 2000)","This paper establishes a context for the work of Eric Raymond and his description of the Linux phenomenon, by examining the emerging science of complex adaptive systems pioneered by John Holland, Christopher Langton, Robert Axelrod, among others. Raymond's evolutionary view is given an extended and more formal treatment under the terms of chaos and complexity, and chaos and complexity under the terms of sociology. In addition, this paper presents an ethnographic account of Linux, amassed from a series of electronic mail interviews with kernel developers. These interviews examine Linux as a social phenomena, which has prompted wide interest and become a subject of heated discussion. Comments and feedback of this paper can be found at http://www.cukezone.com/kk49/linux/contents.html","",""
"2005","Management and virtual decentralised networks: The Linux project (originally published in Volume 6, Number 11, November 2001)","This paper examines the latest of paradigms - the Virtual Network(ed) Organisation - and whether geographically dispersed knowledge workers can virtually collaborate for a project under no central planning. Co-ordination, management and the role of knowledge arise as the central areas of focus. The Linux Project and its development model are selected as a case of analysis and the critical success factors of this organisational design are identified. The study proceeds to the formulation of a framework that can be applied to all kinds of virtual decentralised work and concludes that value creation is maximized when there is intense interaction and uninhibited sharing of information between the organisation and the surrounding community. Therefore, the potential success or failure of this organisational paradigm depends on the degree of dedication and involvement by the surrounding community.","",""
"2005","Open source software development: Some historical perspectives"," In this paper we suggest that historical studies of technology can help us to account for some, perplexing (at least for traditional economic reasoning) features of open source software development. From a historical perspective, open source software seems to be a particular case of what Robert C. Allen has termed """"collective invention."""" We explore the interpretive value of this historical parallel in detail, comparing open source software with two remarkable episodes of nineteenth century technical advances.  ","",""
"2005","Beyond markets and firms: The emergence of Open Source networks"," Although hierarchies and markets (i.e., autonomy) have been subject to extensive study, heterarchies represent different modalities of organizing that have been little researched. Drawing on complexity theory and the main features of complex evolving systems (CES), this paper sets out to remedy this imbalance by showing that heterarchies feature highly decentralized and relatively stable interactions which are coordinated through an emergent process of parametric adaptation. Implications in terms of learning are discussed casting a new light on the delicate issue of motivation in Open Source software development.   ","",""
"2005","Altruistic individuals, selfish firms? (originally published in Volume 9, Number 1, January 2004)","During 2002, we conducted a survey on 146 Italian firms supplying Open Source software. This paper compares our data on firms’ motivations with data emerging from surveys made on individual programmers. We analyse the role played by different classes of motivations (social, economic and technological) in determining the involvement of different groups of agents in Open Source activities.","",""
"2005","Open Source software engineering - The state of research","The following commentary is part of First Monday's Special Issue #2: Open Source.","",""
"2005","The elephant and the blind men - Deciphering the Free/Libre/Open Source puzzle","The following commentary is part of First Monday's Special Issue #2: Open Source.","",""
"2005","Fundamental issues with open source software development (originally published in Volume 9, Number 4, April 2004)","Despite the growing success of the Open Source movement, most of the general public continues to feel that Open Source software is inaccessible to them. This paper discusses five fundamental problems with the current Open Source software development trend, explores why these issues are holding the movement back, and offers solutions that might help overcome these problems. The lack of focus on user interface design causes users to prefer proprietary software’s more intuitive interface. Open Source software tends to lack the complete and accessible documentation that retains users. Developers focus on features in their software, rather than ensuring that they have a solid core. Open Source programmers also tend to program with themselves as an intended audience, rather than the general public. Lastly, there is a widely known stubbornness by Open Source programmers in refusing to learn from what lessons proprietary software has to offer. If Open Source software wishes to become widely used and embraced by the general public, all five of these issues will have to be overcome.","",""
"2005","Software and seeds: Open source methods"," Open source methodologies used in software are interrogated and then compared to the methods used in farmers’ rights groups. The use of open source methods in other contexts illustrates increasing interest in grassroots democratic movements participating in the continuing process of balance between public and private interests. These efforts provide a possible alternate framework for policy decisions concerning intellectual property.  ","",""
"2006","Tight prior open source equilibrium: The rise of open source as a source of economic welfare","Open source has become a viable mode of production and resource allocation not only for intrinsically motivated communities but for commercial firms as well. This may be due primarily to the fact that open source ultimately produces greater value on both the use and production sides. Open source thus acts as an institution that affects the structure of the software industry much more efficiently than politics and law. It also provides an economic perspective that may help refine the standard notion of the firm since it emphasises the link between firm and market, not the frontiers that separate the two.","",""
"2006","Aligning the ideals of free software and free knowledge with the South African Freedom Charter","When Amartya Sen visited South Africa in 2004 he made the observation that Nelson Mandela’s long walk to freedom began on African soil. He implicitly recognised that we have in South Africa a long tradition of interpreting, articulating and striving for an ideal of freedom, which reflects the aspiration of the broad masses of our people. The clearest articulation of this struggle was the Freedom Charter, adopted by the congress of the people in Kliptown in 1955.  The free software movement (and related efforts in the fields of science and culture) draws upon a tradition of freedom rooted in an American libertarian tradition. In this short paper, I underline the importance of aligning efforts to promote free software and free culture with the rich existing tradition embodied in the South African Freedom Charter. Doing so may require a reinterpretation, re–imagining and even perhaps a re–vocabularising of the digital commons if it is to succeed as as a social, technical and political project in South Africa.","",""
"2006","Given enough minds...: Bridging the ingenuity gap","Peak oil. Climate change. Air pollution and top soil depletion. Water shortages and intractable conflicts. Disease, poverty, hunger, terrorism, natural disasters, and anomie ... the world is full of tough problems. What would a sustainable open infrastructure dedicated to finding solutions look like?  For many of the toughest problems, it will have to lower financial, disciplinary, and bureaucratic boundaries to make more use of non–specialists — interested citizens who are willing to share their knowledge, expertise, connections, and commitment to confront common challenges. This implies that the investment required per citizen to get involved must be relatively low, whether measured in money, time, or technical expertise. Our goal in this paper is to demonstrate how to start building an effective open system to support such sharing today.  Many of the tools exist already, both technical and social. Many of the requisite technical tools exist as inexpensive or free software, e.g. for information sharing, discussions, audio conferencing, small–scale video conferencing, and simultaneous editing. Social tools are often more difficult to master than technical ones. They include filtering contributions and contributors to separate the wheat from the chaff, building a sense of community and shared goals, motivating contributors to stay involved, making the link from smaller to larger efforts, and keeping the whole process fun and productive. Different “collaboration modes” can be identified, each with characteristic interaction topologies and scale of people involved.  We look at two case studies that we have been involved with: developing strategies for dealing with peak oil scenarios, and contributing to the online magazine WorldChanging (at http://worldchanging.com/). For us and for many others who were and are involved in such open initiatives, a big part of the motivation to spend so much time and effort solving problems is enjoyment of """"productive fun"""". After all, nobody has to worry about making bars or coffee shops “sustainable”. Our challenge is to make a problem–solving infrastructure so much fun that it becomes a natural, widely accepted custom — a combination of widely available software, open science, and open content that leads to open participation in building our common future.","",""
"2006","The case for open markets in education","This paper outlines a new approach, based on existing research, experience and practice, to improve public education and educational equity by making more effective technological systems for education available. It argues that effective administrative and educational data systems are essential to support widespread educational reform. These systems can best be sustained and developed within a competitive marketplace using open and closed source tools combined with open communities of practice and expertise. These innovations can help to ensure that such markets, tools and communities can evolve to support a very large number of districts undertaking comprehensive organizational reform.","",""
"2006","An analysis of open source principles in diverse collaborative communities","Open source culture and practice emerged as software hackers took control over the production, ownership and distribution of their skilled work. This revolution, quiet and unnoticed by most, began over twenty years ago. Along the way, free and open source software hackers developed organizational and dialog structures to support their ethos, creating a successful model for collaboration. This paper applies traits common to successful free software and open source hacker communities as a framework to analyze three non–hacker collaborative communities.","",""
"2006","The politics of the libre commons","The project of ‘free culture’ is committed to the creation of a cultural space, rather like the ‘public domain’, seeking to complement/replace that of proprietary cultural commodities and privatized meaning. This has been given a new impetus with the birth of the Creative Commons. This organization has sought to introduce cultural producers across the world to the possibilities of sharing, co–operation and commons–based peer–production by creating a set of interwoven licenses for creators to append to their artwork, music and text. In this paper, we chart the connections between this movement and the early Free Software and Open Source movements and question whether underlying assumptions that are ignored or de–politicized are a threat to the very free culture that the project purports to save. We then move to suggest a new discursive project linked to notions of radical democracy.","",""
"2006","FLOSS methods in biotechnology","In 2002 UNCTAD proposed [1] a categorization of “key issues” in biotechnology, which included (a) “building capacity for developing and managing biotechnology,” [2] (b) “biosafety and bioethics and the capacity for risk assessment,” [3] (c) “building awareness of biotechnology” [4] and (d) “accessing biotechnology and intellectual property rights” [5]. A number of perceived problems in the current regime of intellectual property protection and, more in general, of innovation policies has given fuel to several discourses on and around “alternative” methods to stimulate, protect and manage innovation in the biotech field. Following an earlier work on the subject [6], this paper aims to contribute to the conceptualization of the biotechnology innovation process, with specific attention to patent licensing practices, under the lenses of FLOSS [7] legal, economical, and cultural dynamics — what has been dubbed elsewhere as “Open Source Biotechnology.” [8] The discussion will be limited to a specific subfield — namely, the bio–pharmaceutical field — and to a limited set of players, i.e. profit–maximizing firms, with the desire to understand what are the obstacles and the options for a firm in use a “FLOSS model” in its research, development and commercialization processes.","",""
"2006","Ethical and economic issues surrounding freely available images found on the Web","By reverse engineering Google queries and by tracing back the referrer values found in Apache log files, the use of images made available from infomotions.com is examined. Ethical and economic questions questions are then asked. While all the images from the site are “freely” available under the GNU Public License, they are not always used in the intended manner. This raises interesting questions regarding the time spent making the images available, the expense of the hardware and network connections, and whether or not the application of the images is put to good and moral purposes. This essay addresses these questions in an attempt to come to an understanding regarding the place of data, information, and knowledge in an “open” environment.","",""
"2006","Openness, access to government information and Caribbean governance","As governments worldwide move towards openness and transparency, the development of legislation to facilitate access to information is an essential requirement for modernization of the public sector and for effective governance.  Access to information legislation is one way to ensure integrity in public life. Over 68 countries have approved national legislation and many are actively involved in the implementation of these laws.  Globally the move to openness is supported by statements aimed at ensuring universal and equitable access to information as a basic human right. Factors influencing the approval of this legislation have included internal and external pressures from civil society, local and international press associations, and regional and international organizations.  These laws mainly have an overall objective of mitigating corruption and provide the general public with the ability to request documents and other materials held by all government agencies and other agencies receiving public funds. The exemptions identified under the laws are usually based on ensuring national security.  In the English–speaking Caribbean, Antigua and Barbuda, Belize, Jamaica, and Trinidad and Tobago have passed access legislation and several countries including the British Virgin Islands, Cayman Islands, and Guyana are discussing their own draft legislation.  This paper assesses the main elements and current status of the legislation from global surveys including that done by Banisar in 2004, and will examine in detail the progress in implementing the access legislation in the Caribbean. The research will examine the context of access legislation, complementary legislation, information infrastructure, administrative procedures, and the impact of new technologies on access to information services.","",""
"2007","Open Forum","","",""
"2007","Open Forum","","",""
"2007","Seeking open infrastructure: Contrasting open standards, open source and open innovation","None Available","",""
"2007","Licence fees and GDP per capita: The case for open source in developing countries (originally published in December 2003)","  There is a strong case for free software (also known as open source or libre software) being deployed widely in developing countries. This paper describes three reasons in particular: free software is a skills enabling platform; it is far cheaper; and it is more adaptable to local needs. The free software development community provides an environment of intensive interactive skills development at little explicit cost, which is particularly useful for local development of skills, especially in economically disadvantaged regions. Meanwhile, the controversy over total costs of ownership (TCO) of free vs. proprietary software is not applicable to developing countries and other regions with low labour costs, where the TCO advantage lies with free software, and the share of licence fees in TCO is much higher than in (richer) high labour cost countries. The note concludes with a table comparing license fees for proprietary software against GDP per capita for 176 countries.  ","",""
"2007","Annotating and linking in the Open Journal Systems","This study reports on user based research on the annotating and linking prototype components of the Open Journals Systems of the Public Knowledge Project. The study describes the features of the components and provides results based on an analysis of both quantitative and qualitative data. The paper concludes by stating design implications of the research, and outlines future research based on development of the prototype.","",""
"2007","Building an open access African studies repository using Web 2.0 principles","This paper describes the aims and design of an open access African Studies Repository (ASR) (http://www.africanstudiesrepository.org/) that is under development. The ASR is a relational database compatible with the open repository platform DSpace but incorporating the participatory online tools collectively known as ‘Web 2.0’. The aim of the ASR is to create a space where everyone who works on Africa, both inside and outside the continent, can store their work, access useful resources, make contacts, and join discussions.","",""
"2007","The Protestant ethic strikes back: Open source developers and the ethic of capitalism","Free/Open Source software development has initiated new models and theories of social organization and immaterial labor in terms of a “hacker” culture. However, our survey of four developer communities shows that there is a continuum of communities from voluntary communities, corresponding to the “hacker” image, to more business-oriented communities deviating from the image. It is particularly noteworthy that old and familiar modes of organization based on waged labor are increasingly a part of developer communities. This may create new dynamics and tensions both inside communities and between the various partners taking part in Free/Open Source software development projects.","",""
"2007","Tragedy of the FOSS commons? Investigating the institutional designs of free/libre and open source software projects","Free/Libre and Open Source Software projects (FOSS) are a form of Internet-based commons. Since 1968, when Garrett Hardin published his famous article “Tragedy of the Commons” in the journal Science, there has been significant interest in understanding how to manage commons appropriately, particularly in environmental fields. An important distinction between natural resource commons and FOSS commons is that the “tragedy” to be avoided in natural resources is over-harvesting and the potential destruction of the resource. In FOSS commons the “tragedy” to be avoided is project abandonment and a “dead” project. Institutions – defined as informal norms, more formalized rules, and governance structures – are mechanisms that have been shown to help overcome tragedies in some environmental commons situations. The goal of this paper is to more formally describe the concept of FOSS institutions and to conduct a preliminary examination of FOSS projects in order to shed light into institutions, their composition and importance to the projects. We report findings from an initial set of interviews of FOSS developers and find that in commons settings that need to encourage contribution rather than control over-appropriation, the institutional designs appear to be extremely lean and as unobtrusive as possible. To the FOSS programmers we interviewed, institutional structure adds transaction costs and hinders collective action. This is markedly different from traditional environmental commons settings.","",""
"2007","Open source athletes","The open source development model has often been treated by academic research as a new and unique model of production, fundamentally differing from previous known and accepted economic models. This paper explores a possible metaphor between open source and athletics as a way to increase our understanding of the open source phenomenon.  Open source development has a great similarity of amateur and professional athletics. Properties such as the importance of a community, sportsmanship and fair play are important in both areas. By comparing open source developers (OSD) with athletes, we see that many commonly regarded unique features of OSD may already be existent in other parts of our economy. A greater understanding and previous research of business models, coaching and motivation in athletics might therefore provide useful models of explanation in the field of open source research as well.","",""
"2007","Implementing openness: An international institutional perspective","The debate on “openness” has tended to focus on standard setting, software copyrights, patent policy and collaborative innovation models – large issues that evoke heated debates that take on a quasi–religious dimension. As these issues start to enter onto the mainstream public policy agenda of many countries, moving these ideas from punditry to policies is not obvious.   But openness also manifests itself in less visible, more tractable issues such as open access to infrastructure, scientific research and use of public data and information — fundamental elements of “cyberinfrastructure.” While perhaps less visible in the public debate, these elements provide lessons on how to implement openness into public policy and outline an ecology for supporting openness. Our experience reveals that it is important to break down the issues into practical elements that bureaucracies can implement, where metrics can be devised that allow dispassionate economic analysis, where divisive issues can be isolated, and where the stakeholders are not so diverse.","",""
"2007","Pervasive fun","The goal of the study on Fun and Software Development (FASD) is to precisely assess the importance that fun has as motivation for software developers to engage in open source projects. A survey carried out both under open source developers and programmers working in Swiss software companies yielded that the fun motive accounts for about 27 percent to 33 percent of open source developers’ motivation.  Fun is a pervasive feature of software development, not only for open source programmers but in the area of commercial software development too: Open source developers that are paid for their work are observed to be very motivated and prepared for future effort, especially if they enjoy their development time. Furthermore, the fun that programmers experience functions as a good proxy for their productivity. Therefore, employers that want to enhance the programmers’ productivity can safely invest in an environment of fun for developers in their company.","",""
"2007","Collaborative development of open content: A process model to unlock the potential for African universities (originally published in February 2003)","  Given the cost of content, the under-resourcing of universities and the scattered nature of expertise in Africa, the collaborative development of open content seems like a useful way to get high-quality, locally-relevant content for using to enhance teaching-and-learning. However, there is currently no published operational model to guide institutions or individuals in creating collaborative open content projects. This paper examines lessons learned from open source software development and uses these lessons to build the foundations of a process model for the collaborative development of open content.  ","",""
"2007","Open access to law in developing countries (originally published in December 2004)","  Securing a widespread and, whenever possible, free, access to legal information has become important everywhere. Open access has higher stakes in developing countries where access to law is often difficult. In this particular context, free access to statutes and case law could significantly contribute to a better establishment of the rule of law and an overall consolidation of national legal institutions.   Never before have better conditions existed for a wider circulation of law. The Internet and related technologies have dramatically revolutionized the possibilities of cheaply providing high–quality, low–cost access to national legal documentation. In this article, elements of a strategy aimed at developing open access to law in developing countries are put forth.   ","",""
"2007","Open educational resources in a global context","Can open educational resources help solve the global education shortage? Will a social authoring process enable developing and developed countries to create educational resources together? This paper analyzes these and other questions around the emerging use of open educational resources in a global context. Global perspectives are provided via analysis and extracts from discussion and case studies that took place in a UNESCO online discussion forum involving 480 participants from 90 countries. Open educational resource types, benefits, business models, and futures are explored","",""
"2008","Adaption of Linux SSL servers across cultures","Linux has received significant attention worldwide, but differences in its adoption across countries has gained less interest. This paper aims to fill this gap by investigating the proportion of Linux among SSL servers in the Internet. The findings of this research question earlier findings concerning the influence of culture on adoption of technology. Findings of this research could be useful for both proprietary and open source software companies. Likewise, by understanding the influence of culture on Linux adoption, OSS communities can adjust their activities to gain optimum international operations.","",""
"2008","Reasons for the non-adoption of OpenOffice.org in a data-intensive public administration","Several academic studies have already been conducted to investigate the reasons influencing the adoption of open source desktop software such as Linux and OpenOffice.org. However, few studies have been devoted to determine the reasons for not adopting open source desktop software. In order to address this issue, we present a case study on the Belgian Federal Public Service (FPS) Economy which considered the use of OpenOffice.org, but eventually decided not to adopt OpenOffice.org as their primary office suite. This decision was to a large degree influenced by the fact that a large number of users within the FPS Economy perform data-intensive tasks such as statistical data analysis and reporting on a daily basis. Notwithstanding the fact that several reasons were actually in favor of the migration, we have identified several barriers that may discourage the use of OpenOffice.org in similar environments.","",""
"2008","Ubuntuism, commodification, and the software dialectic","“Free as in speech, but not free as in beer,” is the refrain made famous by Richard Stallman, the standard-bearer of the free software movement. However, many free software advocates seem to be of the opinion that the purity of free software is somehow tainted by any preoccupation with money or profit. Inevitably, this has implications for the economic sustainability of free software, for without a source of income, how can free software hope to survive? The challenge of finding a way to ensure economic sustainability without sacrificing the ideals of free software is what we have termed the “software dialectic.”&#x0D; &#x0D; While the literature on the economics of free software is already quite substantial, in this essay we approach the subject by considering first principles, such as the difference between wealth and money, how the market chooses what to produce, and what the laws of thermodynamics have to do with economics. Finally, even though the ideas expressed in this essay apply to free software in general, here we shall be focusing on that particular incarnation of free software known as the GNU/Linux system.","",""
"2008","Free and open source licenses in community life: Two empirical cases","How do licenses participate in Free and Open Source Software (FLOSS) community life? This paper aims at answering this question.&#x0D; &#x0D; Despite the dynamic character of FLOSS development, the sociological debate has taken for granted a static perspective of communities organized around a restricted range of social values and rules. Criticizing the main sociological approaches to FLOSS community, we assert, on the contrary, that the FLOSS free/open character shall not be assumed a priori to explain the coordination efforts in communities.&#x0D; &#x0D; Focusing on the role of software licenses in everyday FLOSS communities activities, considered as boundary objects, we observe that controversies and conflicts around licenses are fundamental parts of  communities life. Basing our researches on two different projects, the Geographical Information System GRASS and the OpenSolaris™ Operating System, we show how the construction of the FLOSS free/open character  takes place inside the debates about licenses.","",""
"2008","Open source collaboration: Two cases in the U.S. public sector","Globally, there is an emergence of open source consortia focused on the sharing of resources and code, and a desire to promote an open source approach generally. In this paper, we describe our findings from interviews with participants working in two relatively new consortia in the government sector: the Government Open Code Collaborative or GOCC, and the Open Source Software Institute or OSSI. For each case we consider six major questions: (1) How and why did these collaborative efforts begin? (2) What are their motivations? (3) How are these collaborative efforts governed? (4) What communication and collaborative infrastructure do they utilize? (5) What software do they focus on? and, (6) What is their current status? Our findings suggest that incentives, membership structures, stable paid staff, concentrated focus and attention to the creation and delivery of “value” to participating organizations are important factors leading to successful open source consortia.","",""
"2009","SOFTWARE POLITICS IN BRAZIL","In this article, I examine free and open source software as a unique terrain of struggle over the politics of globalization, focusing on the Brazilian government's software strategy under the Lula administration. First, I locate this strategy in the historical context of the Brazilian government struggles for technological development and autonomy. I highlight how the Brazilian government used its power as a hierarchical organization to take advantage of the distinctive, networked political economy of free and open source software. I employ a post-structural political economy perspective to analyze the key role of discourse within the Brazilian software strategy. Second, I explore two ways that the Lula administration pursued its strategy of digital inclusion through an innovative approach to the politics of consumption. It used the power of government purchases to shift to free and open source systems, as well as pursuing a more ambitious project to democratize consumption of computers, free software and the Internet among Brazil's poor. I conclude by examining the implications of this software strategy for understanding and developing a political economy of digital inclusion. †Revised version of paper presented at the annual meeting of the American Sociological Association, Boston, August 2008.","",""
"2009","OPEN SPACES, OPEN SOURCES","This article addresses open source software development and the open source movement and critically examines their utility as a metaphor for conceptualizing the new politics of networked organizations. We apply the open source metaphor to the World Social Forum (WSF), which in terms of its Charter of Principles, and its notion of open, horizontal and inclusive space appears, as a new form of civil society, to embody the ethos of the open source movement. We analyse the forums since 2001, up to, and including, the United States Social Forum of 2007, examining them both in terms of the ideal of open, horizontal and inclusive space and in terms of the practices of the forums in advocating for, and using, open source software. The article then argues that both the concept of open source and the WSF are embedded in the realities of global digital divides and the struggle over access to the digital means to communicate, frequently expressed in terms of communication rights. We describe the role of the WSF in advocating for those rights and mobilizing civil society. We show how the WSF and its charter, which challenges corporate power in the name of social justice, must do so using networks within a digitally divided neo-liberal system, which itself must be overcome if networked politics are to be fully democratic and inclusive. The article concludes that issues of power, conflict, hierarchy and exclusion must be taken more seriously by supporters of open source and the WSF. That said, we acknowledge the contribution the open source ideal and the WSF have made to revitalizing discussions of politics and the political.","",""
"2009","Empowering the users? A critical textual analysis of the role of users in open source software development","","",""
"2009","Open source enters the world of atoms: A statistical analysis of open design","Extensive research has been done to analyze the phenomenon of open source software development from various perspectives. By contrast little is known about open source development of tangible objects, so-called open design, so far. Until recently, limitations to the availability of successful empirical examples of this 'new innovation model' outside software may have been a key reason for this gap.&#x0D; &#x0D; This paper contributes to the literature on the open source mode of product development by providing a quantitative study (N = 85) of open design projects. Our goal is to explore the landscape of open source development in the world of atoms, to analyze project characteristics, structures, and success, and to investigate similarities and dissimilarities to open source software development.","",""
"2009","Running code as part of an open standards policy","Governments around the world are considering implementing or even mandating open standards policies.  They believe these policies will provide economic, socio-political, and technical benefits. In this article, we analyze the failure of the Massachusetts’s open standards policy as applied to document formats.  We argue it failed due to the lack of running code. Running code refers to multiple independent, interoperable implementations of an open standard. With running code, users have choice in their adoption of a software product and consequently economic and technological benefits. We urge governments to incorporate a “running code” requirement when adopting an open standards policy.","",""
"2009","From PDF to MP3: Motivations for creating derivative works","With increasing frequency, authors are licensing their works in such a way so as to permit others to create derivative works. In some cases, these derivatives extend the impact of a work by providing a translation into another language or modifying the file format to make it more accessible. The Internet is increasing people’s ability to create and distribute these derivatives. Seventeen creators of derivatives were surveyed on their motivations for doing so. They indicated that they were willing to create derivatives that extend the original content of a book because they want to help others access the work. Nearly all the people surveyed indicated they were glad they had created derivative works, often feeling like they were part of a community effort to share the work with others. These creators of derivatives believe that as awareness of open licenses increases others will be encouraged to create derivative works.","",""
"2010","Software as Risk: Introduction of Open Standards in the Danish Public Sector","In June 2006, the Danish parliament passed a resolution introducing open standards for software in the public sector. Open standards ensure interoperability in software. The introduction of open standards facilitates the spread of alternative software solutions, such as open source software, into environments (e.g., the public sector) that have hitherto been dominated by software produced by the proprietary software industry. In this article, the authors analyze the political process that led to the passing of the resolution, arguing that the concepts of risk and governmentality associated with Ulrich Beck (1992b) and Mitchell Dean (1999) allows one to theorize about this process. In so doing, they draw attention to the significance of the notion of risk in the context of public-sector software.","",""
"2010","Unlimited potential, unlimited power? Microsoft's corporate citizenship in the battle over new social relations of production","This paper explores the increasingly important role a new corporate social responsibility movement is playing in international development. Using a critical policy approach, the overarching question posed is: what ideological work does Microsoft Corporation’s world–wide philanthropic programs, and specifically its Unlimited Potential (UP) program, perform within the context of contemporary class struggles over the new means and relations of production? At the heart of this question is the ongoing battle between the free and open source software movement or FOSS and the proprietary software lobby as represented by Microsoft.","",""
"2010","A sustainable future for open textbooks? The Flat World Knowledge story","Many college students and their families are concerned about the high costs of textbooks. Ebooks have been proposed as one potential solution, open-source textbooks have also been explored. A company called Flat World Knowledge produces and gives away open-source textbooks in a way they believe to be financially sustainable. This article reports an initial study of the financial sustainability of the Flat World Knowledge open-source textbook model.","",""
"2011","Who connects with whom?  A social network analysis of an online open source software community","By examining “who connects with whom” in an online community using social network analysis, this study tests the social drivers that shape the collaboration dynamics among a group of participants from SourceForge, the largest open source community on the Web. The formation of the online social network was explored by testing two distinct network attachment logics: strategic selection and homophily. Both logics received some support. Taken together, the results are suggestive of a “performance-based clustering” phenomenon within the OSS online community in which most collaborations involve accomplished developers, and novice developers tend to partner with less accomplished and less experienced peers.","",""
"2011","A taxonomy for measuring the success of open source software projects","Open Source Software (OSS) has been widely adopted by organizations as well as individual users and has changed the way software is developed, deployed and perceived. Research into OSS success is critical since it provides project leaders with insights into how to manage an OSS project in order to succeed. However, there is no universally agreed definition of “success” and researchers employ different dimensions (e.g., project activity and project performance) to refer to OSS success. By conducting a rigorous literature survey, this paper seeks to take a holistic view to explore various areas of OSS success that have been studied in prior research. Finally it provides a measurement taxonomy including six success areas for OSS projects. Implications for theory and practice are presented.","",""
"2011","Community created open source hardware: A case study of """"eCars - Now!""""","Based on a survey, we describe the demographic and motivational structure of one open source hardware (OSH) community and compare it to open source software (OSS) communities. Taken separately, both the demographics and the motivational structure of the OSH community fall clearly within the typology of OSS communities, but when the two are taken together the OSH community forms a type of its own. We also discuss bottlenecks in OSH development revealed by the survey and subsequent interviews.","",""
"2012","HACKING THE GLOBAL","This paper explores software's pivotal role in the power dynamics of contemporary capitalism. The author theorizes Free Software as a new form of property that is infecting capitalism like a virus, challenging the system of private property central to its dominant logic. Free Software can be produced by developers working for free in peer communities or in profit-oriented firms. The author explores the conditions under which Free Software is produced through peer versus market-based production, emphasizing the implications for constructing the Free Software market and the digital commons. The author identifies actors' motivations, the organizational structure of production, and financial resources as three factors shaping these conditions. The author focuses on the case of Ubuntu, a Free Software operating system that is available free of charge on the Internet. Ubuntu is produced by Canonical, a Free Software, market-based firm, through an intriguing combination of market-based and peer production that both embodies and transforms capitalist practices.","",""
"2012","Democratizing production through open source knowledge: from open software to open hardware"," The commercial success of open source software, along with a broader socio-cultural shift towards participation in media and cultural production, have inspired attempts to extend and expand open source practices. These include expansions from software into general culture through ‘Free Culture’ movements and, more recently, expansions from software into hardware and design. This article provides a critical perspective on the democratic potential of these broader ‘open’ contribution structures by examining how open source contributions to both software and hardware increase the opportunities for democratic participation in production, governance and knowledge exchange. By analysing attempts to ‘open source’ the sharing of hardware designs, it also notes the limitations of this democratization. The insights developed in the article nuance the relationship between open source cultures and commercial and market structures, identifying how the generative opportunities created by certain aspects of open source contribution structures increase the potential for democratizing production of communication tools, but also how incongruities across different open-source cultures and communities of practice limit the democratic potential of these processes. ","",""
"2012","An empirical study of software market share: Diversity and symbiotic relations","With the increasing use of software products, software ecosystems have emerged. Software ecosystems not only include the same type of products, but also include other related products that they support or depend on. Software marketplace diversity and the symbiotic relations between software products are important properties of a software ecosystem. They have great impact on the popularity and evolution of a software product. This paper presents an empirical study of a software marketplace ecosystem, which is formed by operating systems, Web browsers, and Web servers: (1) Using the concept of market share entropy, we analyze the diversity of the marketplace; and, (2) Using correlation tests, we analyze the symbiotic relations between products. Based on the results of these two studies, we analyze the relation between marketplace diversity and symbiosis in a software ecosystem.","",""
"2012","Do open source software developers listen to their users?","In application software, the satisfaction of target users makes the software more acceptable. Open source software (OSS) systems have neither the physical nor the commercial boundaries of proprietary software, thus users from all over the world can interact with them. This free access is advantageous, as increasing numbers of users are able to access OSS; there are more chances of improvement. This study examines the way users’ feedback is handled by OSS developers. In our survey, we have also inquired whether OSS developers consult professional usability experts to improve their projects. According to the results, majority of OSS developers neither consider usability as their top priority nor do they consult usability experts.","",""
"2012","‘Patches don’t have gender’: What is not open in open source software"," While open source software development promises a fairer, more democratic model of software production often compared to a gift economy, it also is far more male dominated than other forms of software production. The specific ways F/LOSS instantiates notions of openness in everyday practice exacerbates the exclusion of women. ‘Openness’ is a complex construct that affects more than intellectual property arrangements. It weaves together ideas about authorship, agency, and the circumstances under which knowledge and code can and cannot be exchanged. While open source developers believe technology is orthogonal to the social, notions of openness tie the social to the technical by separating persons from one another and relieving them of obligations that might be created in the course of other forms of gift exchange. In doing so, men monopolize code authorship and simultaneously de-legitimize the kinds of social ties necessary to build mechanisms for women’s inclusion. ","",""
"2013","<i>Decoding Liberation: The Promise of Free and Open Source Software</i>, by Samir Chopra and Scott D. Dexter. New York, NY: Routledge, 2007. 211 pp. $135.00 hardcover/$39.00 paper. ISBN 0415978939 (hardcover)/0415876788 (paper).","Early in Samir Chopra and Scott D. Dexter’s refreshingly and unapologetically ideological, but ultimately also frustrating and problematic Decoding Liberation: The Promise of Free and Open Source Software, the authors make their position clear: Proprietary software is not only deeply unethical but also anathema to the values embraced by even the most stridently capitalist of contemporary societies. It is also, they argue, probably futile to even try to prevent others from accessing and modifying others’ code. To prove this point, the authors compare software—“an easily reproducible and disseminable artifact” (45)—to the output of poets and musicians. “It is difficult to imagine poets and musicians being able to restrict when and how their works and performed,” they write, “particularly if these restrictions infringe on the free speech rights of others” (45). In fact, it is not difficult at all to imagine poets and musicians being able to restrict others’ use of their work: One need only consider songwriters’ resistance to the use of their work by politicians. Some recent examples: In 2008, lawyers for the rock duo Heart advised Sarah Palin to stop using their song “Barracuda” at campaign stops. In the same year, John Mellencamp demanded that John McCain stop using two of his songs, “Little Pink Houses” and “Our Country”; Jackson Browne also told McCain to stop using his “Running on Empty.” Tom Petty has issued at least two cease-and-desist letters, one in 2011 to conservative presidential hopeful Michele Bachmann for using “American Girl” at rallies, and one in 2000 to George W. Bush for using “I Won’t Back Down.” In all cases, the politicians backed down. It does seem, after all, that musicians stand behind their right to determine how their creative work is appropriated by others (Greene 2011); given this, why should we expect software designers—creative types and, if Chopra and Dexter are to be believed, the technoera’s new poets and songwriters—to give up ownership and control over their creative work? Perhaps this comparison is a minor flaw in the authors’ argument and one that should not be worth quibbling over—except that Decoding Liberation is full of similarly problematic assertions. Chopra and Dexter argue that one way to think about FOSS (free and open-source software) licenses is as “de facto constitutions” that both represent and regulate the values of their constituents (62). We can therefore, they argue, consider the virtue of a given constituency by examining its constitution, since","",""
"2013","The cost and quality of online open textbooks: Perceptions of community college faculty and students","Proponents of open educational resources (OER) claim that significant cost savings are possible when open textbooks displace traditional textbooks in the college classroom. We investigated student and faculty perceptions of OER used in a community college context. Over 125 students and 11 faculty from seven colleges responded to an online questionnaire about the cost and quality of the open textbooks used in their classrooms. Results showed that the majority of students and faculty had a positive experience using the open textbooks, appreciated the lower costs, and perceived the texts as being of high quality. The potential implications for OER initiatives at the college level seem large. If primary instructional materials can in fact be made available to students at no or very low cost, without harming learning outcomes, there appears to be a significant opportunity for disruption and innovation in higher education.","",""
"2014","Public sector software and the revolution: digital literacy in communist Kerala"," In the context of cost-cutting and austerity measures, public sector software based on the principles and technologies of free and open source software is increasingly being used by governments in both the developed and developing worlds. The move to adopt non-proprietorial software has been precipitated by a number of factors apart from cost, including the recognition of the effects of vendor lock-in, the consequences of efficiency deficits linked to the lack of inter-operability of software across sectors and departments, the recognition of the failure of existing software policy and its consequences, particularly a heightened comprehension of risk, and the realisation of the need for informational independence. This article explores public sector software as a ‘public good’, with specific reference to the IT@School project in Kerala state, India, that has enabled access and, in that process, empowered local, state-funded secondary school teachers and students to define, shape and create their own informational futures. ","",""
"2014","Images of innovation in discourses of free and open source software","In this study, we examine the relationship between innovation and free/open source software (FOSS) based on the views of contributors to FOSS projects, using Q methodology as a method of discourse analysis to make visible the positions held by FOSS contributors and identify the discourses encountered in the FOSS community. In specific, our analysis reveals four discourses: four ways of expressing oneself used by FOSS contributors, which, aside from certain commonalities, postulate fundamentally different conceptions of innovation. Whereas the dispersion of FOSS contributors’ subjectivity across four different discourses is indicative of the diversity and heterogeneity of the FOSS community, their commonalities, however, demarcate a common ground that all discourses share: points of agreement include the negative effect of patents on innovation, the predominant role of end users over manufacturers in the innovation process and the embrace of FOSS licenses as a key enabler of innovation. In the conclusion, we outline some implications for innovation management and policy.","",""
"2014","Putting open science into practice: A social dilemma?","Digital technologies carry the promise of transforming science and opening up the research process. We interviewed researchers from a variety of backgrounds about their attitudes towards and experiences with openness in their research practices. We observe a considerable discrepancy between the concept of open science and scholarly reality. While many researchers support open science in theory, the individual researcher is confronted with various difficulties when putting open science into practice. We analyse the major obstacles to open science and group them into two main categories: individual obstacles and systemic obstacles. We argue that the phenomenon of open science can be seen through the prism of a social dilemma: what is in the collective best interest of the scientific community is not necessarily in the best interest of the individual scientist. We discuss the possibilities of transferring theoretical solutions to social dilemma problems to the realm of open science.","",""
"2015","Professional Work for Nothing: Software Commercialization and “An Open Letter to Hobbyists”","In 1975 Bill Gates published “An Open Letter to Hobbyists” in response to unauthorized duplication of Microsoft software. The letter appeared in numerous hobby magazines and club newsletters, sparking a dialogue among contemporary hobbyist readers, many of whom had not yet seriously considered the ethical and economic dimensions of commercial software. In the 1980s, histories of personal computing published in the popular press preserved a memory of the open letter that was later taken up by advocates of the free and open-source software movement. As the open letter traveled through each of these discursive contexts, it enabled enthusiasts and entrepreneurs alike to think about the problems of ownership, authorship, labor, and value brought about by software commercialization.","",""
"2015","Professional Work for Nothing: Software Commercialization and “An Open Letter to Hobbyists”","In 1975 Bill Gates published “An Open Letter to Hobbyists” in response to unauthorized duplication of Microsoft software. The letter appeared in numerous hobby magazines and club newsletters, sparking a dialogue among contemporary hobbyist readers, many of whom had not yet seriously considered the ethical and economic dimensions of commercial software. In the 1980s, histories of personal computing published in the popular press preserved a memory of the open letter that was later taken up by advocates of the free and open-source software movement. As the open letter traveled through each of these discursive contexts, it enabled enthusiasts and entrepreneurs alike to think about the problems of ownership, authorship, labor, and value brought about by software commercialization.","",""
"2015","The Politics of Sequence: Data Sharing and the Open Source Software Movement","    The Bermuda Principles (1996) have been celebrated as a landmark for data sharing and open science. However, the form that data sharing took in genomics was a result of specific technological practices. Biologists developed and adopted technologies of the nascent World Wide Web and Free and Open Source Software (FOSS) communities for sharing biological information. These technologies supported decentralized, collaborative, and nonproprietary modes of production in biology. Such technologies were appealing not merely because they were expedient for genomic work but because they also offered a way of promoting a particular form of genomic practice. As the genome sequencing centers scaled up their sharing efforts, a small group of computer-savvy biologists used these tools to promote the interests of the public genome sequencing effort. The agreements at Bermuda should be understood as part of this attempt to foster a particular form of genomic work.  ","",""
"2015","The Politics of Sequence: Data Sharing and the Open Source Software Movement","The Bermuda Principles (1996) have been celebrated as a landmark for data sharing and open science. However, the form that data sharing took in genomics was a result of specific technological practices. Biologists developed and adopted technologies of the nascent World Wide Web and Free and Open Source Software (FOSS) communities for sharing biological information. These technologies supported decentralized, collaborative, and nonproprietary modes of production in biology. Such technologies were appealing not merely because they were expedient for genomic work but because they also offered a way of promoting a particular form of genomic practice. As the genome sequencing centers scaled up their sharing efforts, a small group of computer-savvy biologists used these tools to promote the interests of the public genome sequencing effort. The agreements at Bermuda should be understood as part of this attempt to foster a particular form of genomic work.","",""
"2015","Open culture and innovation: integrating knowledge across boundaries"," What does open source mean for culture? For knowledge? As cultural production has come to be characterized by contribution as well as consumption and as alternative modes of intellectual property transfer challenge the ‘dominant paradigm’ that knowledge and information should be protected and monetized, the logic of ‘open sourcing’ has extended into many cultural spheres. This article positions ‘openness’ as a value that intermediates between re-usable software code, institutional transparency, and expanded opportunities for participation in knowledge production cultures. By observing and analyzing the expansion of ‘openness’ from computer software to electronics hardware, we can develop a framework that identifies the tensions between socio-cultural visions of knowledge commons and the realities of governing those commons. This research focuses in particular on the knowledge related to electronics hardware and other material objects governed by open hardware licenses. The insights in this article are valuable for anyone studying open source and peer production processes and the knowledge claims surrounding them. ","",""
"2016","Free Software as Public Service in Brazil: An Assessment of Activism, Policy, and Technology","Brazil has been one of the more progressive countries in adopting free and open source software as part of broader social and digital inclusion initiatives. Many of these policies and projects have their roots in activism during President Luiz Inacio Lula da Silva’s presidency. Since then, free software projects and policies have continued to advance within state institutions, but the effectiveness of these projects and policies remains relatively unexplored. To that end, this article focuses on three recent projects aimed at using free software to expand social and digital inclusion. However, I argue that these projects do not adequately link intention to outcome when assessing the effectiveness of the projects or policies.","",""
"2016","Ethics of the software vulnerabilities and exploits market","ABSTRACT In this article we establish three claims: (1) When the target software is proprietary, in the absence of other overriding ethical considerations, the identification of a vulnerability and the development, sale, and purchase of non-zero-day exploits are ethically justified; (2) when the target software is Free/Libre/Open Source, the buying and selling of vulnerabilities can be ethically justified only in a very narrow situation, while the sale and purchase of non-zero-day exploits is ethically justified absent of any other overriding information; and (3) democratic governments should promote legislation that either incentivizes corporate in-house vulnerability identification and mitigation programs or requires firms to more fully absorb the societal costs of insecure software.","",""
"2016","Communities: with open-source software towards a vivacious civil society","","",""
"2016","Open cultural production and the online gift economy: The case of Blender","The economies of the Internet are largely driven by sharing. Much of it is often veiled in a celebratory discourse that emphasizes how sharing artifacts online through gift exchanges removes hierarchies and creates broader access to public knowledge, such as in projects of free culture and open source software development. The article critically interrogates these assumptions and the gift economy of open cultural production more generally. Using a practice called open source animation film making, developed by Blender, an organisation at the core of the largest open source 3D computer graphics community, this paper shows that the discourse surrounding free culture online has largely misunderstood the complexity and ambiguities of the economy below the cultural politics of openness. With the help of classical theories of gift and value I discuss issues of debt, obligation, status, discipline, and social hierarchies created by exchanging online a variety of digital artifacts of different value, such as software, culture, and labor. This article shows that the wealth of open cultural production relies on combining multiple dimensions of gifting with fiscal and hidden forms of capital, producing a culture of secrecy in parallel to that of openness.","",""
"2016","Fifty shades of open","Open source. Open access. Open society. Open knowledge. Open government. Even open food. The word “open” has been applied to a wide variety of words to create new terms, some of which make sense, and some not so much. This essay disambiguates the many meanings of the word “open” as it is used in a wide range of contexts.","",""
"2017","Values and Configuration of Users in the Design of Software Source Code","Based on an empirical study of two free and open source software projects, this article focuses on how choices of design   within software source code are articulated with values and may favor certain categories of actors over others. After introducing the aim and approach of the study and presenting the studied projects, the article analyzes two controversies that show the articulation of values, configuration of users, and source code design. In conclusion, I argue for the importance for communication and media studies to study the use of source code and how its design may reflect values or may facilitate or constrain the agencies of certain categories of people.","",""
"2017","The openness of Open Application Programming Interfaces","ABSTRACT As a way to provide services or data to third-party developers, Open Application Programming Interfaces (Open APIs) have gained popularity among the programming community in recent years. Many corporations such as Google, Facebook and Twitter are developing Open APIs for their existing services, and most of them are free of charge. As these free APIs facilitate collaboration between different software platforms, many programmers treat them as alternatives to open source. Yet, some programmers have found this collaboration risky to their independence, and they have started to think about the true meaning of the openness of API. More importantly, the definition of Open APIs is rendered ambiguous through the discursive practices that define ‘openness’ in contemporary digital culture. Drawing on the political economy of programming and software, this study begins with the historical discussion of openness and its relationship with the power of code in programming. It points out the openness in programming is not only about the accessibility of the source code, but also the liberty to use source code without restriction. This paper then identifies the technical features of Open APIs and examines the subtle power that restricts their openness. It concludes by suggesting ways to critically understand the openness of software and their politics.","",""
"2017","Towards open science in Argentina: From experiences to public policies","The emergence and wide diffusion of information and communication technologies created ever increasing opportunities for sharing and collaboration, which shortened geographic, disciplinary and expertise distances. There exist various technologies, tools and infrastructure that facilitate collaborative production processes in various social spheres, and scientific production is not an exception. Open science produces scientific knowledge in a collaborative way, including experts and non-experts and to share the outcomes of knowledge creation processes. We identify 68 open science initiatives in Argentina using different primary and secondary sources. This paper describes those experiences in terms of goals, disciplines and openness along research stages. Building on the relationship between characteristics of openness and expected benefits, we discuss policy implications in order to better support openness and collaboration in science.","",""
"2017","Openness as social praxis","Since the early 2000s, there has been an explosion in the usage of the term open, arguably stemming from the advent of networked technologies — including the Internet and mobile technologies. ‘Openness’ seems to be everywhere, and takes many forms: from open knowledge, open education, open data and open science, to open Internet, open medical records systems and open innovation. These applications of openness are having a profound, and sometimes transformative, effect on social, political and economic life.This explosion of the use of the term has led to multiple interpretations, ambiguities, and even misunderstandings, not to mention countless debates and disagreements over precise definitions. The paper “Fifty shades of open” by Pomerantz and Peek (2016) highlighted the increasing ambiguity and even confusion surrounding this term. This article builds on Pomerantz and Peek’s attempt to disambiguate the term by offering an alternative understanding to openness — that of social praxis. More specifically, our framing can be broken down into three social processes: open production, open distribution, and open consumption. Each process shares two traits that make them open: you don’t have to pay (free price), and anyone can participate (non-discrimination) in these processes.We argue that conceptualizing openness as social praxis offers several benefits. First, it provides a way out of a variety of problems that result from ambiguities and misunderstandings that emerge from the current multitude of uses of openness. Second, it provides a contextually sensitive understanding of openness that allows space for the many different ways openness is experienced — often very different from the way that more formal definitions conceptualize it. Third, it points us towards an approach to developing practice-specific theory that we believe helps us build generalizable knowledge on what works (or not), for whom, and in what contexts.","",""
"2018","Ubuntu Linux in Zimbabwe: the digital unhu in open source practices"," In this article, I argue for an alternative history of open source told from the perspective of the Southern African nation of Zimbabwe. This perspective on open source deviates from standard histories in that it reveals a more comprehensive relationship to technologies and its political possibilities by including the understudied region of Zimbabwe. I premise this analysis based on the concept of ‘digital unhu’, a concept that sketches out a Zimbabwean inflection of immaterial labor and contains three components of the fusion of new technologies with older traditions, an emphasis on collaborative practices, and a prominence placed on mobility. Examining this framework and these concepts through the aid of the case studies, Zim.doc, and the website Wild Forest Ranch, I provide evidence of the ways that open source practices are articulated to the local, historical, and political nuances of the region. I argue that the effort to disseminate information and skills to populations required to maneuver around the conditions of food scarcity, high levels of unemployment, and violent political repression existing under Robert Mugabe’s Zimbabwe particularly highlights digital unhu’s characteristic of mobility. ","",""
"2018","Barriers, incentives, and benefits of the open educational resources (OER) movement: An exploration into instructor perspectives","Open educational resource (OER) barriers, incentives, and benefits are at the forefront of educator and institution interests as global use of OER evolves. Research into OER use, perceptions, costs, and outcomes is becoming more prevalent; however, it is still in its infancy. Understanding barriers to full adoption, administration, and acceptance of OER is paramount to fully supporting its growth and success in education worldwide. The purpose of this research was to replicate and extend Kursun, Cagiltay, and Can’s (2014) Turkish study to include international participants. Kursun, et al. surveyed OpenCourseWare (OCW) faculty on their perceptions of OER barriers, incentives, and benefits. Through replication, these findings provide a glimpse into the reality of the international educators’ perceptions of barriers, incentives, and benefits of OER use to assist in the creation of practical solutions and actions for both policy makers and educators alike. The results of this replication study indicate that barriers to OER include institutional policy, lack of incentives, and a need for more support and education in the creating, using, and sharing of instructional materials. A major benefit to OER identified by educators is the continued collegial atmosphere of sharing and lifelong learning.","",""
"2018","Moral Orders in Contribution Cultures","This article examines how decisions are made and justified within cultures of contribution using an “operational pragmatics.” Peer-production and contribution cultures are enfolded in a dynamic of resistance and appropriation in relation to capitalism. Open-source and contribution-based cultural processes have been critiqued as tending towards bureaucracy or becoming enfolded in a never-ending neoliberal imaginary from which escape or transcendence become impossible. An examination of the values expressed within a peer-production community challenges these perspectives and shows how “operational pragmatics” can provide moral justifications through reference to matters of principle and matters of design. Conflating these matters complicates claims about the inherent virtues of participation, especially in technical cultures. A qualitative analysis of an open-source hardware project shows how competing moral justifications unfold, and how the challenges that they pose to capitalism may be tenuous or temporary because of the way that justificatory regimes work within technology development under capitalism.","",""
"2019","Revolution postponed? Tracing the development and limitations of open content filmmaking","ABSTRACT Networked information technologies have brought about extensive changes in the production and distribution of creative cultural work. Inspired by the widespread success of Free-Libre/Open Source Software (FLOSS), many proponents of open access advocate reconceptualisation of existing legal protection frameworks in creative works. This paper traces the attempted appropriation of Creative Commons (CC) licences by filmmakers and the consequent formation of an Open Content Filmmaking (OCF) movement. OCF proponents articulated notions of technology-enabled transformation in content creation and distribution, similar to those that inspire the visions of FLOSS and CC advocates. It examines how these creators attempted to address the relevance of openness to their own activities and develop practical open models for filmmaking. Difficulties experienced in establishing viable livelihoods with OCF (as FLOSS developers had done), created tensions between those with a pragmatic or more ideological orientation. The initial vision of a consistent OCF movement, enabled by CC, thus became fragmented. In contrast to FLOSS, where many actors were able to find ways to develop sustainable careers within the industry while contributing to Open Source Software, such generic strategies have not readily emerged for OCF. Drawing insights from Sørensen’s (1996) Social Learning framework (Learning technology, constructing culture. Sociotechnical change as social learning: University of Trondheim, STS working paper 18/96) in this paper we untangle the elaborate but often messy strategies deployed by Open Content Filmmakers (OCFs) and trace the multiple and often partial ways they have worked out to utilise CC elements and tools in producing, monetising and distributing their films.","",""
"2019","Revolution remixed? The emergence of Open Content Film-making as a viable component within the mainstream film industry","ABSTRACT Our previous study of the Open Content Film-making (OCF) community Revolution Postponed? Tracing the development and limitations of open content filmmaking, Information, Communication & Society, (10.1080/1369118X.2018.1464590) had shown how early expectations that Creative Commons (CC) licences would enable a viable alternative to mainstream film production, comparable to free/libre open source software (FLOSS), were challenged, in particular, by the difficulties experienced in establishing viable livelihoods with OCF. A narrative of the apparent failure of OCF may be premature, however. This paper reports on a subsequent study of how OCF practices became adopted as mundane elements in a film production and distribution system that itself has been, and continues to be, dramatically changed by digitisation. These developments broke down the dichotomy that had been drawn between existing commercial practices and visions of a new system of decentralised, non-proprietary, peer production. First, we show that OCF practices are conceptualised by our informants in relation to the mainstream independent film industry. Second, we account for how OCF tools and practices become adopted within the mainstream independent film production/distribution system. These observations highlight that limiting the scope of investigation (e.g., by only undertaking short term ‘snapshot’ studies, limited to particular settings or groups) may yield flawed interpretations based on narrow viewpoints and premature judgements. Instead, we flag the need to extend research – both longitudinally and across a range of settings/viewpoints – applying methodological templates from the Biography of Artefacts and Practices perspective (Hyysalo, 2010; Pollock & Williams, 2008).","",""
"2019","The meaning of sharing in free software and beyond","ABSTRACT This study brings together findings about two contexts of sharing in order to explore the meaning of the word in the digital environment. First, this study is based on ethnographic research of free software projects and uses the resulting thick description to determine the meaning of sharing in this context. Second, the current literature on sharing usually takes user-generated content (UGC) platforms as its empirical reference, resulting in identifying a distinct meaning of sharing in this context. By combining the two sets of findings into a single narrative, this study makes three points: (1) the academic discourse on free software conceptualizing it as a form of gift-giving antithetical to the ways of capitalist production needs to be revised; (2) the use of sharing in the context of UGC platforms relies heavily on references to the culture of free software; (3) although representatives from both contexts claim to be taking part in the same sharing practices, there are substantial differences in the type of information being shared, the explicitness of the sharing mechanisms, and the organizational context of monetization of the shared objects.","",""
"2019","Open-source projects as incubators of innovation: From niche phenomenon to integral part of the industry"," Over the last 20 years, open-source development has become an integral part of the software industry. Against this backdrop, this article seeks to develop a systematic overview of open-source communities and their socio-economic contexts. I begin with a reconstruction of the genesis of open-source software projects and their changing relationships to established information technology companies. This is followed by the identification of four ideal-type variants of current open-source projects that differ significantly in their modes of coordination and the degree of corporate involvement. Further, I examine why open-source projects lost their subversive connotations while, in contrast to former cases of collective invention, remaining viable beyond the initial phase of innovation. ","",""
"2019","Open enough? Eight factors to consider when transitioning from closed to open resources and courses: A conceptual framework","Transitioning from closed courses and educational resources to open educational resources (OER) and open courseware (OCW) requires considerations of many factors beyond simply the use of an open licence. This paper examines the pedagogical choices and trade-offs involved in creating OER and OCW. Eight factors are identified that influence openness (open licensing, accessibility and usability standards, language, cultural considerations, support costs, digital distribution, and file formats). These factors are examined under closed, mixed and most open scenarios to relatively compare the amount of effort, willingness, skill and knowledge required. The paper concludes by suggesting that maximizing openness is not practical and argues that open educators should strive for ‘open enough’ rather than maximal openness.","",""
"2019","The rising tide: Open source’s steady transformation","Open source projects are transforming. Today, work within open source projects has come to be influenced by a growing set of companies and individuals who receive financial remuneration for their engagement. As such, there is a central focus on commoditization and commercialization of open source products, which drives a trend towards a concealment of the various inner workings that produce these products. Within this shift, the product becomes a central aim of open source project engagement, and the means of production becomes incidental. In this paper, we explore the HCI research and design implications of the transformation of open source projects as part of commercial work and how we can come to better understand and protect the rising tide of open source projects.","",""
"2019","Open Web annotation as collaborative learning","This paper describes the use of open Web annotation (OWA) for collaborative learning among online communities. OWA is defined by the open standards, principles, and practices associated with the open Web. Specifically, this case study examines collaborative learning mediated by the OWA technology Hypothesis, a standards-compliant and open-source technology that situates collaboration in texts-as-contexts. Hypothesis OWA supports a repertoire of six collaborative learning practices: Affording multimodal expression, establishing connections across contexts, archiving activity, visualizing expertise and cognition, contributing to open educational resources, and fostering open educational practices. The use of Hypothesis OWA is then described in three online communities associated with scientific research and communication, educator professional development, and Web literacy and fact-checking. The article concludes by advancing three broad questions and related research agendas regarding how OWA as collaborative learning attends to linkages among formal and informal learning environments, the growth of both open educational resources and practices, and the use of open data as learning analytics.","",""
"2020","FIRM DISCOURSES AND DIGITAL INFRASTRUCTURE PROJECTS","Free and open source software (a.k.a. FOSS or ‘digital infrastructure’) is now fully integrated into commercial ecosystems. IT firms invest in FOSS in order (a) to share with other firms development costs; (b) to help attract prospective employees in a competitive job market where hiring skilled IT professionals is challenging and (c) to shape the governance and technical orientation of projects: firm employees participating in leading in FOSS projects may help IT firms create digital infrastructure more suited to the firmware they develop atop this infrastructure. How does the world of FOSS volunteers connect to the world of commercial ecosystems? Are firms developing policies in relation to open source communities, requesting projects conform to certain technical or behavioral standards, for example? To what extent are these strategies successful? To answer, we present a qualitative analysis of firm discourses collected during three open source conferences. We then analyze the email discussion lists of Linux and Firefox and search for the occurrence of key firm discourse terms in order to ascertain in what way these discourses are being used by FOSS developers. Our in-depth analysis of firm discourses and exploratory analysis of project discussions around these terms show that the FOSS world encompasses a diversity of industrial outlooks. They also highlight the evolution of the role of foundations: whilst foundations used to protect projects from firm interference, some have now wholly been placed in the service of firm efforts to standardize project work, particularly around the key issue of security.","",""
"2020","Measuring the development and communication of open design communities: The case of the OpenAg Initiative","Open collaborative development and transparent design processes are often associated to the concept of open design (OD). Studies in remote collaborative processes are still recent and a wide number of aspects of OD remain unclear. This study explores an OD project by mining data in collaboration platforms. As our research object, we selected the Open Agriculture Initiative. Data was mined from its online forum, and Github, a development platform. Social network analysis (SNA) and topic modeling techniques were used to explore four research questions. We comment on these questions highlighting differences between both platforms, stakeholder participation and personal interests, community changes over time, activity volume and latent topics. Finally, we conclude by indicating possible pathways to investigate OD as an emergent phenomenon by using data mining techniques.","",""
"2021","Norms and Open Systems in Open Science","abstract:Through a review of studies of open science and open behaviors (data sharing, open access publishing, open source software development) and editorial writing that promotes open science, we identify two themes prominent in the advocacy of open science: normative (Mertonian) scientific values and the importance of open systems. We report examples of these themes and suggest that open science advocates understand the movement as a value-driven ethos pursuing improved science through the use of technology. We contend that a belief in the open ethos is distinct from participation in open behaviors and that, consequently, open systems are used by two ideologically distinct user groups. We conclude by discussing the implications of this characterization of open science, focusing on the consequences of different user groups using the same technological systems.","",""
"2021","ENTANGLED AUTONOMY ON AUTOMATED AIRWAVES: THE CASE OF RIVENDELL","Rivendell, a free and open source software suite for automated radio         broadcasting, has brought several groups with clashing stances on technology, communication,         and cultural politics into cooperation. This paper treats Rivendell as an opening onto the         politics at play when the liberal ethos propelling free and open source software (Coleman,         2013) meets the autonomy-prizing traditions of independent broadcasting within an automation         system. Complicating this already tense juncture, Rivendell has drawn users and code         contributors from drastically opposed political groups within American         broadcastings—right-wing Christian talk radio networks and progressive community         stations—and has sustained a difficult terrain of working compromise that the activist push         for low-power FM broadcasting inaugurated (Dunbar-Hester, 2014). In this paper, analysis of         Rivendell's open source code base sheds light on its development and helps connect it to         longer histories of media automation and its attendant social frictions. Interviews with         lead Rivendell developers complete the picture of the project's trajectory, of its relation         to the religious right context where the project began, and of the negotiations that have         played out among its developers and its community of users in terrestrial and internet         radio. The ongoing compromises and tensions threaded through Rivendell can offer insight         into an issue that becomes larger and more pressing as media become increasingly complex and         networked: how artists, activists, and media technologists who prioritize independence have         reckoned with their reliance on socio-technical infrastructures whose connections may strike         them as far less than savory.","",""
"2021","Standard setting organizations and open source communities: Partners or competitors?","Standardization serves a as a means to improve overall quality of life through the economies of scale gained from the pervasive adoption of technical solutions. It enables competition by facilitating interoperability between products of different vendors. The wider open source community develops free and open source software (FOSS) in a global upstream/downstream model that similarly benefits society as a public good. FOSS and standards setting organizations (SSOs) are both instruments causing standardizing effects. Innovators and policy-makers assume that a mutually beneficial collaboration between them is desirable. However, their exact relationship is not fully understood, especially when and how FOSS and SSOs complement each other, or displace each other as competitors. To be able to compare FOSS and SSOs, our study develops a phase model of standardization that is applicable to both approaches, and applies this model to compare the strengths and weaknesses of FOSS and SSOs against common opportunities and threats in the ICT sector. Based on qualitative expert interviews with FOSS and SSO representatives, the synthesis of the separate results support conclusions from a product, a process and a societal perspective. The study identifies cost of change as a key determinant for the efficacy of each approach. It concludes that FOSS and SSOs create complementary products, compete for efficiency of the standardization process, and are both independent and complementary standardization instruments available to industry and influenceable by policy-makers. The paper closes with a discussion of possible implications relevant to businesses, the wider open source community, SSOs and policy-makers.","",""
"2021","‘Open source has won and lost the war’: Legitimising commercial–communal hybridisation in a FOSS project"," Information technology (IT) firms are paying developers in Free and Open Source Software (FOSS) projects, leading to the emergence of hybrid forms of work. In order to understand how the firm–project hybridisation process occurs, we present the results of an online survey of participants in the Debian project, as well as interviews with Debian Developers. We find that the intermingling of the commercial logic of the firm and the communal logic of the project requires rhetorical legitimation. We analyse the discourses used to legitimise firm–project cooperation as well as the organisational mechanisms which facilitate this cooperation. A first phase of legitimation, based on firm adoption of open licenses and developer self-fulfilment, aims to erase the commercial/communal divide. A second more recent phase seeks to professionalise work relations inside the project and, in doing so, challenges the social order which restricts participation in FOSS. Ultimately, hybridisation raises the question of the fair distribution of the profits firms derive from FOSS. ","",""
"2022","Openness","","",""
"2022","Examining the technological and pedagogical elements of select open courseware","Openness in open courseware (OCW) and open educational resources (OER) requires an open licence, such as Creative Commons licenses, but is affected by several factors both technological and pedagogical. This pilot study examines different factors impacting openness by looking at a very small random sample of 10 relatively recent open courseware offerings from TU Delft and MIT. This paper has two primary objectives: 1) to determine how open the sampled OCW are across eight factors of analysis; and, 2) to determine if the sampled OCW are suitable for educator reuse. The authors evaluated the sampled courses using an existing framework to conceptualize openness. The level of openness was evaluated across eight-factors: copyright/open licensing, accessibility/usability, language, support costs, assessment, digital distribution, file format, and cultural considerations. The framework describes each factor across three dimensions of openness — closed, mixed, and most open — and each author coded the sampled OCW accordingly. This content analysis provided several insights into where sampled OCW succeeded and failed in terms of openness. Courses tended to be relatively open in terms of copyright, assessment, and digital distribution, but closed in terms of language, support costs, and file format. Factors such as accessibility and cultural considerations were more mixed; discipline and course content play a factor in a course’s openness and reuse. This paper also serves a secondary purpose, on the effectiveness of the framework for assessing openness. Openness is a spectrum, with an interplay between factors that determine openness. Greater attention needs to be shown toward pedagogical considerations, rather than technical, when developing open content.","",""
"2022","Does the rising tide of OER lift all boats?","While open education resources (OER) have grown in popularity over the last few years, few researchers have considered the benefits of OER adoption beyond direct student benefits. Stakeholder theory argues there is merit in identifying value for several interconnected groups, in this context the institution and instructors. Using a quasi-experimental research design, I evaluated the effect of OER adoption on instructor benefits and institutional rewards, as well as multiple student outcomes. I found student satisfaction, perceptions of quality, and academic integrity were significantly related to OER adoption. While relationships to the other outcomes, notably of direct instructor benefits, were not supported. These findings reveal the benefits of OER adoption are not realized for all stakeholders.","",""
"2023","Chromium as a tool of logistical power: A material political economy of open-source"," Open-source software is used by almost all technology companies and has become an integral part of the technical infrastructure of digital capitalism. Generally, developers of open-source software have been viewed as a social movement at odds with the capitalist profit motive. This idealized view has been challenged as companies have made significant investments in open-source since the early 2000s. Current research frames corporate participation in open-source as fundamentally extractive in nature, failing to account for these sizable investments. Through a historical analysis of Google's Chromium browser project, we provide another way to understand corporate participation in open-source. This article takes a material political economic approach to argue that control of open-source projects can grant companies logistical power that enables them to influence standards and shape the Internet as an infrastructure for digital capitalism. ","",""
"2023","Share and share unlike: Reciprocity, corporate power, and the open source ethos"," The “open source” model initially emerged as a way for programmers to collaborate on efforts to build and share code, but has since evolved to embody an ethos of sharing and cooperation that pervades software development as a whole. As many technologists have seen, however, a philosophy of openness can leave them vulnerable to attempts by large corporations to use the norms of open source communities for their own benefits. This article examines the breach of social trust that occurs when companies do not fulfill expectations of reciprocity in their relationships with open source communities, and instead attempt to co-opt their work for monetary gain. Through analysis of three case studies, I seek to emphasize the often misleading nature of these processes and show that they are directly incorporated into the business models of large corporations, even if they are not openly acknowledged as such. ","",""
"2024","“My Word Is My Bond”: A Primer for Information Scholars on Accountability and Misinformation","ABSTRACT:This article surveys several academic literatures that discuss accountability with the intention of introducing these literatures to information scholars who may want to bring them into their arsenal as they address the role of misinformation in the world. I begin with a definition of accountability and several closely related correlates and discuss what key Western philosophers have had to say about the concept. I discuss accountability in professional life, in the health care field, and in politics and governance. I also discuss accountability in private life and examine two examples of the social construction of accountability.","",""
"2024","Countering underproduction of peer produced goods"," Peer produced goods, such as online knowledge bases and free/libre open source software rely on contributors who often choose their tasks regardless of consumer needs. These goods are susceptible to underproduction: when popular goods are relatively low quality. Although underproduction is a common feature of peer production, very little is known about how to counteract it. We use a detailed longitudinal dataset from English Wikipedia to show that more experienced contributors—including those who contribute without an account—tend to contribute to underproduced goods. A within-person analysis shows that contributors’ efforts shift toward underproduced goods over time. These findings illustrate the value of retaining contributors in peer production, including those contributing without accounts, as a means to counter underproduction. ","",""
"2024","Subverting or preserving the institution: Competing IT firm and foundation discourses about open source"," The data economy depends on digital infrastructure produced in self-managed projects and communities. To understand how information technology (IT) firms communicate to a volunteer workforce, we examine IT firm and foundation employee discourses about open source. We posit that organizations employ rhetorical strategies to advocate for or resist changing the meaning of this institution. Our analysis of discourses collected at three open source professional conferences in 2019 is complemented by computational methods, which generate semantic clusters from presentation summaries. In terms of defining digital infrastructure, business models, and the firm-community relationship, we find a clear division between the discourses of large firm and consortia foundation employees, on one hand, and small firm and non-profit foundation employees, on the other. These divisions reflect these entities’ roles in the data economy and levels of concern about predatory “Big Tech” practices, which transform common goods to be shared into proprietary assets to be sold. ","",""
"2024","Co-producing industrial public goods on GitHub: Selective firm cooperation, volunteer-employee labour and participation inequality"," The global economy’s digital infrastructure is based on free and open source software. To analyse how firms indirectly collaborate via employee contributions to developer-run projects, we propose a formal definition of ‘industrial public goods’ – inter-firm cooperation, volunteer and paid labour overlap, and participation inequality. We verify its empirical robustness by collecting networks of commits made by firm employees to active GitHub software repositories. Despite paid workers making more contributions, volunteers play a significant role. We find which firms contribute most, which projects benefit from firm investments, and identify distinct ‘contribution territories’ since the two central firms never co-contribute to top-20 repositories. We highlight the challenge posed by ‘Big Tech’ to the non-rival status of industrial public goods, thanks to cloud-based systems which resist sharing, and suggest there may be ‘contribution deserts’ neglected by large information technology firms, despite their importance for the open source ecosystem’s sustainability and diversity. ","",""
"2024","The usefulness of open events: Navigating professional spaces of urban Meetups"," Based on ethnographic research, this paper examines the burden of search that individuals bear in navigating the plethora of open events surrounding the tech industry. It focuses on one learn-to-code Meetup, finding that attendees are pulled in by the hope embedded in the popular imaginary of coding, particularly the programming language Python, as a way to change their careers. While the gathering’s call labels it as a learning space,the study finds teaching happens rarely, instead drawing individuals who seek peers based on a Python affinity, in part to break the side-by-side-but-not together norms of urban mobile work. This paper argues that the hope of individual professional change spills over into the hope of sharing space with programmers and to find “local Python community”. However, given the porosity of events facilitated by online convening, the gathering falls short of attracting those already pertaining to that community itself. ","",""
"2024","*READ**THIS*!! Spam as a threat for open science"," Drawing on multiple sources of qualitative data, I describe a case of open science infrastructure (OSI) abuse. The case illustrates how developers navigated scholarly value tensions and issues of epistemic and platform legitimacy while battling spam on their open science webapp. Notably, their struggle used precious financial resources and drew attention away from other development tasks like feature expansion. This research makes evident that not only is OSI abuse like spam a financial burden, but it puts scholarly information security—specifically, the legitimacy of open science content—at risk. However, protecting against such abuse is not a trivial matter; it raises questions of who is responsible for defining and enforcing scholarly values. The urgency of this issue is magnified by OSI’s relationship to public trust in science. ","",""
"2025","FROM GLOBAL TO LOCAL: A STUDY OF OFFLINE-FIRST COMMUNITY INFRASTRUCTURE DEVELOPMENT","Purpose  The purpose of this paper is to examine the move from global to local, in relation to FLOSS software projects and their implementation in local communities. The need stems from a gradual ecological collapse which brings about unforeseeable consequences to human civilization and infrastructures. By investigating the process of global development to local infrastructure, more resilient and localized communication solutions can be implemented.  Findings  This paper aims to find the challenges in moving from global software development to a local implementation of open source infrastructure by mapping out the issues offline-first protocols face in reaching a stage of local implementation of their development and the issues communities face in implementing their own communication infrastructures. These findings can support the steps of moving from global software development projects to locally implemented infrastructures.  Method  The method is based on semi-structured interviews with four communities and four protocols with a minimum of 2 interviews with each project and community. At the end of the project an online workshop is hosted enabling collective reflection for the communities and projects, and potential knowledge sharing.  Originality  The research of moving from global to local is extensively explored through the scaling and commercialization of software. By flipping the approach around and looking at global software developments implementation in local communities this paper delves into a relatively unexplored, and necessary, area of research. The research also supports the active implementation of FLOSS projects for real communities striving towards data-sovereignty and local infrastructures.","",""
"2025","Open source software field research: Spanning social and practice networks for re-entering the field","Sociotechnical research increasingly includes the social sub-networks that emerge from large-scale sociotechnical infrastructure, including the infrastructure for building open source software. This paper addresses these numerous sub-networks as advantageous for researchers. It provides a methodological synthesis focusing on how researchers can best span adjacent social sub-networks during engaged field research. Specifically, we describe practices and artifacts that aid movement from one social subsystem within a more extensive technical infrastructure to another. To surface the importance of spanning sub-networks, we incorporate a discussion of social capital and the role of technical infrastructure in its development for sociotechnical researchers. We then characterize a five-step process for spanning social sub-networks during engaged field research: commitment, context mapping, jargon competence, returning value, and bridging. We then present our experience studying corporate open source software projects and the role of that experience in accelerating our work in open source scientific software research as described through the lens of bridging social capital. Based on our analysis, we offer recommendations for engaging in fieldwork in adjacent social sub-networks that share a technical context and discussion of how the relationship between social and technically acquired social capital is a missing but critical methodological dimension for research on large-scale sociotechnical research.","",""
